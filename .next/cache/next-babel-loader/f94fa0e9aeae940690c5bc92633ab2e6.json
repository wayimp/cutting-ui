{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/keith/cutting-ui/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { wrapper } from '../components/store';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Link from '../src/Link';\nimport TopBar from '../components/TopBar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { getLangString } from '../components/Lang';\nimport { useSnackbar } from 'notistack';\nimport cookie from 'js-cookie';\nimport axiosClient from '../src/axiosClient';\nimport { Avatar, Box, Container, Grid, Paper, Typography, FormControl, FormControlLabel, InputLabel, Input, FormHelperText, Button, TextField, Snackbar } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      marginTop: theme.spacing(16),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n});\n\nvar Login = function Login(_ref) {\n  _s();\n\n  var dispatch = _ref.dispatch,\n      lang = _ref.lang,\n      segment = _ref.segment;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      authenticating = _React$useState2[0],\n      setAuthenticating = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      username = _React$useState4[0],\n      setUsername = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1];\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var token = cookie.get('token');\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setAuthenticating(true);\n              body = {\n                username: username,\n                password: password\n              };\n              _context.next = 4;\n              return axiosClient.post('/token', body).then(function (response) {\n                setAuthenticating(false);\n                var accessToken = response && response.data && response.data.access_token ? response.data.access_token : '';\n\n                if (accessToken && accessToken.length > 0) {\n                  enqueueSnackbar(getLangString('login.success', lang), {\n                    variant: 'success'\n                  });\n                  cookie.set('token', accessToken);\n                  dispatch({\n                    type: 'TOKEN',\n                    payload: accessToken\n                  });\n                  axiosClient({\n                    method: 'get',\n                    url: '/bvendors',\n                    headers: {\n                      Authorization: \"Bearer \".concat(accessToken)\n                    }\n                  }).then(function (response) {\n                    dispatch({\n                      type: 'BVENDORS',\n                      payload: response.data\n                    });\n                    Router.push('/orders');\n                  });\n                } else {\n                  enqueueSnackbar(getLangString('login.failure', lang), {\n                    variant: 'error'\n                  });\n                }\n              })[\"catch\"](function (error) {\n                enqueueSnackbar(getLangString('login.failure', lang) + error, {\n                  variant: 'error'\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (token) {\n    Router.push('/orders');\n  }\n\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(TopBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: classes.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.toolbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), __jsx(Container, {\n    maxWidth: \"xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    className: classes.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, __jsx(LockOutlinedIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  })), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, getLangString('login.signIn', lang)), __jsx(FormControl, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"user\",\n    name: \"user\",\n    autoFocus: true,\n    label: getLangString('login.username', lang),\n    onChange: function onChange(event) {\n      return setUsername(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), __jsx(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    type: \"password\",\n    id: \"password\",\n    label: getLangString('login.password', lang),\n    onChange: function onChange(event) {\n      return setPassword(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: handleSubmit,\n    disabled: authenticating,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, getLangString('login.signIn', lang)))))));\n};\n\n_s(Login, \"S+jI06mx5wMkJsrYLA+Mt0Dt2ck=\", false, function () {\n  return [useStyles, useTheme, useSnackbar];\n});\n\n_c = Login;\nexport default connect(function (state) {\n  return state;\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/keith/cutting-ui/pages/index.js"],"names":["React","useState","Router","connect","wrapper","fade","makeStyles","useTheme","Link","TopBar","LockOutlinedIcon","getLangString","useSnackbar","cookie","axiosClient","Avatar","Box","Container","Grid","Paper","Typography","FormControl","FormControlLabel","InputLabel","Input","FormHelperText","Button","TextField","Snackbar","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","dispatch","lang","segment","classes","authenticating","setAuthenticating","username","setUsername","password","setPassword","enqueueSnackbar","token","get","handleSubmit","body","post","then","response","accessToken","data","access_token","length","variant","set","type","payload","method","url","headers","Authorization","push","error","content","toolbar","event","target","value","state"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,0BAA3C;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,SAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,gBARF,EASEC,UATF,EAUEC,KAVF,EAWEC,cAXF,EAYEC,MAZF,EAaEC,SAbF,EAcEC,QAdF,QAeO,mBAfP;AAiBA,IAAMC,SAAS,GAAGvB,UAAU,CAAC,UAAAwB,KAAK;AAAA,SAAK;AACrCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,EAAd,CADN;AAELC,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,aAAa,EAAE,QAHV;AAILC,MAAAA,UAAU,EAAE;AAJP,KAD8B;AAOrCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENM,MAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBC;AAFnC,KAP6B;AAWrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AACW;AACfZ,MAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,KAX+B;AAerCY,IAAAA,MAAM,EAAE;AACNP,MAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AAf6B,GAAL;AAAA,CAAN,CAA5B;;AAoBA,IAAMa,KAAK,GAAG,SAARA,KAAQ,OAAiC;AAAA;;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC7C,MAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,MAAMC,KAAK,GAAGvB,QAAQ,EAAtB;;AAF6C,wBAGDP,KAAK,CAACC,QAAN,CAAe,KAAf,CAHC;AAAA;AAAA,MAGtCkD,cAHsC;AAAA,MAGtBC,iBAHsB;;AAAA,yBAIbpD,KAAK,CAACC,QAAN,CAAe,EAAf,CAJa;AAAA;AAAA,MAItCoD,QAJsC;AAAA,MAI5BC,WAJ4B;;AAAA,yBAKbtD,KAAK,CAACC,QAAN,CAAe,EAAf,CALa;AAAA;AAAA,MAKtCsD,QALsC;AAAA,MAK5BC,WAL4B;;AAAA,qBAMjB5C,WAAW,EANM;AAAA,MAMrC6C,eANqC,gBAMrCA,eANqC;;AAO7C,MAAMC,KAAK,GAAG7C,MAAM,CAAC8C,GAAP,CAAW,OAAX,CAAd;;AAEA,MAAMC,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBR,cAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACMS,cAAAA,IAFa,GAEN;AAAER,gBAAAA,QAAQ,EAARA,QAAF;AAAYE,gBAAAA,QAAQ,EAARA;AAAZ,eAFM;AAAA;AAAA,qBAGbzC,WAAW,CACdgD,IADG,CACE,QADF,EACYD,IADZ,EAEHE,IAFG,CAEE,UAAAC,QAAQ,EAAI;AAChBZ,gBAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,oBAAMa,WAAW,GACfD,QAAQ,IAAIA,QAAQ,CAACE,IAArB,IAA6BF,QAAQ,CAACE,IAAT,CAAcC,YAA3C,GACIH,QAAQ,CAACE,IAAT,CAAcC,YADlB,GAEI,EAHN;;AAIA,oBAAIF,WAAW,IAAIA,WAAW,CAACG,MAAZ,GAAqB,CAAxC,EAA2C;AACzCX,kBAAAA,eAAe,CAAC9C,aAAa,CAAC,eAAD,EAAkBqC,IAAlB,CAAd,EAAuC;AACpDqB,oBAAAA,OAAO,EAAE;AAD2C,mBAAvC,CAAf;AAGAxD,kBAAAA,MAAM,CAACyD,GAAP,CAAW,OAAX,EAAoBL,WAApB;AACAlB,kBAAAA,QAAQ,CAAC;AAAEwB,oBAAAA,IAAI,EAAE,OAAR;AAAiBC,oBAAAA,OAAO,EAAEP;AAA1B,mBAAD,CAAR;AAEAnD,kBAAAA,WAAW,CAAC;AACV2D,oBAAAA,MAAM,EAAE,KADE;AAEVC,oBAAAA,GAAG,EAAE,WAFK;AAGVC,oBAAAA,OAAO,EAAE;AAAEC,sBAAAA,aAAa,mBAAYX,WAAZ;AAAf;AAHC,mBAAD,CAAX,CAIGF,IAJH,CAIQ,UAAAC,QAAQ,EAAI;AAClBjB,oBAAAA,QAAQ,CAAC;AAAEwB,sBAAAA,IAAI,EAAE,UAAR;AAAoBC,sBAAAA,OAAO,EAAER,QAAQ,CAACE;AAAtC,qBAAD,CAAR;AACAhE,oBAAAA,MAAM,CAAC2E,IAAP,CAAY,SAAZ;AACD,mBAPD;AAQD,iBAfD,MAeO;AACLpB,kBAAAA,eAAe,CAAC9C,aAAa,CAAC,eAAD,EAAkBqC,IAAlB,CAAd,EAAuC;AACpDqB,oBAAAA,OAAO,EAAE;AAD2C,mBAAvC,CAAf;AAGD;AACF,eA5BG,WA6BG,UAAUS,KAAV,EAAiB;AACtBrB,gBAAAA,eAAe,CAAC9C,aAAa,CAAC,eAAD,EAAkBqC,IAAlB,CAAb,GAAuC8B,KAAxC,EAA+C;AAC5DT,kBAAAA,OAAO,EAAE;AADmD,iBAA/C,CAAf;AAGD,eAjCG,CAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZT,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAuCA,MAAIF,KAAJ,EAAW;AACTxD,IAAAA,MAAM,CAAC2E,IAAP,CAAY,SAAZ;AACD;;AAED,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAE3B,OAAO,CAAC6B,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE9B,OAAO,CAACnB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEmB,OAAO,CAACb,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,aAAa,CAAC,cAAD,EAAiBqC,IAAjB,CADhB,CAJF,EAOE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,EAAE,EAAC,MALL;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,KAAK,EAAErC,aAAa,CAAC,gBAAD,EAAmBqC,IAAnB,CARtB;AASE,IAAA,QAAQ,EAAE,kBAAAiC,KAAK;AAAA,aAAI3B,WAAW,CAAC2B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAAA,KATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE,MAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,IAAI,EAAC,UANP;AAOE,IAAA,EAAE,EAAC,UAPL;AAQE,IAAA,KAAK,EAAExE,aAAa,CAAC,gBAAD,EAAmBqC,IAAnB,CARtB;AASE,IAAA,QAAQ,EAAE,kBAAAiC,KAAK;AAAA,aAAIzB,WAAW,CAACyB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAAA,KATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAuBE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAEjC,OAAO,CAACL,MALrB;AAME,IAAA,OAAO,EAAEe,YANX;AAOE,IAAA,QAAQ,EAAET,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGxC,aAAa,CAAC,cAAD,EAAiBqC,IAAjB,CAThB,CAvBF,CAPF,CADF,CAFF,CAFF,CADF;AAqDD,CAzGD;;GAAMF,K;UACYjB,S,EACFtB,Q,EAIcK,W;;;KANxBkC,K;AA2GN,eAAe3C,OAAO,CAAC,UAAAiF,KAAK;AAAA,SAAIA,KAAJ;AAAA,CAAN,CAAP,CAAwBtC,KAAxB,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport Router from 'next/router'\nimport { connect } from 'react-redux'\nimport { wrapper } from '../components/store'\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles'\nimport Link from '../src/Link'\nimport TopBar from '../components/TopBar'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport { getLangString } from '../components/Lang'\nimport { useSnackbar } from 'notistack'\nimport cookie from 'js-cookie'\nimport axiosClient from '../src/axiosClient'\nimport {\n  Avatar,\n  Box,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  Input,\n  FormHelperText,\n  Button,\n  TextField,\n  Snackbar\n} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(16),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nconst Login = ({ dispatch, lang, segment }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [authenticating, setAuthenticating] = React.useState(false)\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const { enqueueSnackbar } = useSnackbar()\n  const token = cookie.get('token')\n\n  const handleSubmit = async () => {\n    setAuthenticating(true)\n    const body = { username, password }\n    await axiosClient\n      .post('/token', body)\n      .then(response => {\n        setAuthenticating(false)\n        const accessToken =\n          response && response.data && response.data.access_token\n            ? response.data.access_token\n            : ''\n        if (accessToken && accessToken.length > 0) {\n          enqueueSnackbar(getLangString('login.success', lang), {\n            variant: 'success'\n          })\n          cookie.set('token', accessToken)\n          dispatch({ type: 'TOKEN', payload: accessToken })\n\n          axiosClient({\n            method: 'get',\n            url: '/bvendors',\n            headers: { Authorization: `Bearer ${accessToken}` }\n          }).then(response => {\n            dispatch({ type: 'BVENDORS', payload: response.data })\n            Router.push('/orders')\n          })\n        } else {\n          enqueueSnackbar(getLangString('login.failure', lang), {\n            variant: 'error'\n          })\n        }\n      })\n      .catch(function (error) {\n        enqueueSnackbar(getLangString('login.failure', lang) + error, {\n          variant: 'error'\n        })\n      })\n  }\n\n  if (token) {\n    Router.push('/orders')\n  }\n\n  return (\n    <Container>\n      <TopBar />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Container maxWidth='xs'>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n              {getLangString('login.signIn', lang)}\n            </Typography>\n            <FormControl>\n              <TextField\n                variant='outlined'\n                margin='normal'\n                required\n                fullWidth\n                id='user'\n                name='user'\n                autoFocus\n                label={getLangString('login.username', lang)}\n                onChange={event => setUsername(event.target.value)}\n              />\n              <TextField\n                variant='outlined'\n                margin='normal'\n                required\n                fullWidth\n                name='password'\n                type='password'\n                id='password'\n                label={getLangString('login.password', lang)}\n                onChange={event => setPassword(event.target.value)}\n              />\n              <Button\n                type='submit'\n                fullWidth\n                variant='contained'\n                color='primary'\n                className={classes.submit}\n                onClick={handleSubmit}\n                disabled={authenticating}\n              >\n                {getLangString('login.signIn', lang)}\n              </Button>\n            </FormControl>\n          </div>\n        </Container>\n      </main>\n    </Container>\n  )\n}\n\nexport default connect(state => state)(Login)\n"]},"metadata":{},"sourceType":"module"}