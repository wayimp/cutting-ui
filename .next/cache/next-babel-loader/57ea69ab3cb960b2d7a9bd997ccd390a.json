{"ast":null,"code":"var _jsxFileName = \"/Users/keith/cutting-ui/pages/report/[id].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport axiosClient from '../../src/axiosClient';\nimport { useSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\nimport { flatten } from 'lodash';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Link from '../../src/Link';\nimport TopBar from '../../components/TopBar';\nimport numeral from 'numeral';\nconst priceFormat = '$0.00';\nimport moment from 'moment-timezone';\nconst dateFormat = 'YYYY-MM-DDTHH:mm:SS';\nconst dateDisplay = 'dddd MMM DD hh:mm a';\nimport { Box, Container, Grid, Checkbox, Typography, TextField, List, ListItem, ListItemAvatar, ListItemText, Table, TableBody, TableCell, TableRow, Button, FormControlLabel, IconButton } from '@material-ui/core';\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\n\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DateFnsUtils from '@date-io/date-fns';\nimport ReportItems from '../../components/ReportItems';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nconst itemsAvailable = [{\n  quantity: 1,\n  itemNo: '1',\n  itemName: 'one'\n}, {\n  quantity: 1,\n  itemNo: '2',\n  itemName: 'two'\n}, {\n  quantity: 1,\n  itemNo: '3',\n  itemName: 'three'\n}];\nconst useStyles = makeStyles(theme => ({\n  toolbar: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar),\n  formGroup: {\n    margin: 20,\n    padding: 20,\n    backgroundColor: '#fafafa',\n    border: '1px solid #ccc'\n  },\n  formGroupTop: {\n    margin: 20,\n    padding: 20\n  },\n  center: {\n    textAlign: 'center'\n  },\n  content: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    paddingRight: theme.spacing(5)\n  },\n  root: {\n    padding: 0,\n    flexGrow: 1\n  },\n  center: {\n    textAlign: 'center',\n    flexGrow: 1\n  },\n  lines: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  },\n  nolines: {\n    reportBottom: '2px solid white'\n  },\n  flexGrid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: 2,\n    padding: 2\n  },\n  textFieldWide: {\n    width: '100%',\n    margin: 2,\n    padding: 2\n  },\n  checkbox: {\n    marginTop: 6,\n    marginBottom: 6,\n    marginLeft: 16,\n    padding: 6\n  }\n}));\n\nconst Report = ({\n  propsReport,\n  dispatch\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [report, setReport] = React.useState(propsReport);\n  const {\n    0: reportEdit,\n    1: setReportEdit\n  } = useState({});\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  const [openItems, setOpenItems] = React.useState(false);\n\n  const handleOpenItems = () => {\n    setOpenItems(true);\n  };\n\n  const handleCloseItems = () => {\n    setOpenItems(false);\n  };\n\n  const handleEditItems = () => {\n    const edit = JSON.parse(JSON.stringify(report));\n    setReportEdit(edit);\n    setOpenItems(true);\n  };\n\n  const handleSaveItems = async items => {\n    const updated = _objectSpread(_objectSpread({}, report), {}, {\n      materials: items\n    });\n\n    handleSave(updated);\n    handleCloseItems();\n  };\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  useEffect(() => {\n    document.title = report.customerName;\n  });\n\n  const changeValue = (name, value) => {\n    const updated = _objectSpread(_objectSpread({}, report), {}, {\n      [name]: value\n    });\n\n    setReport(updated);\n    updateReport(updated);\n  };\n\n  const changeField = event => {\n    changeValue(event.target.name, event.target.value);\n  };\n\n  const changeCheckbox = event => {\n    changeValue(event.target.name, event.target.checked);\n  };\n\n  const updateReport = async updateReport => {\n    await axiosClient.patch('/reports', updateReport).then(res => {\n      enqueueSnackbar('Report Updated', {\n        variant: 'success'\n      });\n      setReport(updateReport);\n    }).catch(err => {\n      enqueueSnackbar('Update Error', {\n        variant: 'error'\n      });\n    });\n  };\n\n  return __jsx(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, __jsx(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    alignItems: \"flex-end\",\n    justify: \"space-between\",\n    className: classes.formGroupTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"job\",\n    label: \"Job#\",\n    defaultValue: report.job ? report.job : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, __jsx(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    id: \"date\",\n    label: \"Date\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"po\",\n    label: \"PO#\",\n    defaultValue: report.po ? report.po : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerName\",\n    label: \"Customer Name\",\n    defaultValue: report.customerName ? report.customerName : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerStreet\",\n    label: \"Street Address\",\n    defaultValue: report.customerStreet ? report.customerStreet : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerCity\",\n    label: \"City\",\n    defaultValue: report.customerCity ? report.customerCity : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerState\",\n    label: \"State\",\n    defaultValue: report.customerState ? report.customerState : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerZip\",\n    label: \"Zip\",\n    defaultValue: report.customerZip ? report.customerZip : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerPhone\",\n    label: \"Phone\",\n    defaultValue: report.customerPhone ? report.customerPhone : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"machineType\",\n    label: \"Machine Type\",\n    defaultValue: report.machineType ? report.machineType : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"machineSerial\",\n    label: \"Machine Serial\",\n    defaultValue: report.machineSerial ? report.machineSerial : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"control\",\n    label: \"Control\",\n    defaultValue: report.control ? report.control : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"controlSerial\",\n    label: \"Control Serial\",\n    defaultValue: report.controlSerial ? report.controlSerial : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaType\",\n    label: \"Plasma Type\",\n    defaultValue: report.plasmaType ? report.plasmaType : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaModel\",\n    label: \"Plasma Model\",\n    defaultValue: report.plasmaModel ? report.plasmaModel : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaSerial\",\n    label: \"Plasma Serial\",\n    defaultValue: report.plasmaSerial ? report.plasmaSerial : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"torches\",\n    label: \"Torches\",\n    type: \"number\",\n    defaultValue: report.torches ? report.torches : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      className: classes.checkbox,\n      checked: report.oxyFuel,\n      onChange: changeCheckbox,\n      name: \"oxyFuel\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 17\n      }\n    }),\n    label: \"Oxy Fuel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"drive\",\n    label: \"Drive\",\n    defaultValue: report.drive ? report.drive : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"driveSerial\",\n    label: \"Drive Serial\",\n    defaultValue: report.driveSerial ? report.driveSerial : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    className: classes.textFieldWide,\n    multiline: true,\n    variant: \"outlined\",\n    name: \"reportedTrouble\",\n    label: \"Reported Trouble\",\n    defaultValue: report.reportedTrouble ? report.reportedTrouble : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: handleEditItems,\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    startIcon: __jsx(FormatListBulletedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 15\n    }\n  }, \"Materials Used\")))), __jsx(ReportItems, {\n    handleSaveItems: handleSaveItems,\n    handleCloseItems: handleCloseItems,\n    openItems: openItems,\n    itemsAvailable: itemsAvailable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 9\n    }\n  }), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      margin: 10\n    },\n    onClick: handleCloseItems,\n    startIcon: __jsx(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      margin: 10\n    },\n    onClick: () => updateReport(report),\n    startIcon: __jsx(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 15\n    }\n  }, \"Save\"))));\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    id\n  } = context.params;\n  const propsReport = await axiosClient.get('/reports/' + id).then(response => response.data);\n  return {\n    props: {\n      propsReport\n    }\n  };\n}\nexport default connect(state => state)(Report);","map":{"version":3,"sources":["/Users/keith/cutting-ui/pages/report/[id].js"],"names":["React","useState","useEffect","axiosClient","useSnackbar","connect","flatten","fade","makeStyles","useTheme","Link","TopBar","numeral","priceFormat","moment","dateFormat","dateDisplay","Box","Container","Grid","Checkbox","Typography","TextField","List","ListItem","ListItemAvatar","ListItemText","Table","TableBody","TableCell","TableRow","Button","FormControlLabel","IconButton","FormatListBulletedIcon","CancelIcon","CheckCircleIcon","AddCircleOutlineIcon","DateFnsUtils","ReportItems","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","itemsAvailable","quantity","itemNo","itemName","useStyles","theme","toolbar","display","alignItems","justifyContent","padding","spacing","mixins","formGroup","margin","backgroundColor","border","formGroupTop","center","textAlign","content","flexGrow","paddingRight","root","lines","borderTop","borderLeft","borderRight","reportBottom","nolines","flexGrid","modal","button","textField","textFieldWide","width","checkbox","marginTop","marginBottom","marginLeft","Report","propsReport","dispatch","classes","report","setReport","reportEdit","setReportEdit","enqueueSnackbar","selectedDate","setSelectedDate","Date","openItems","setOpenItems","handleOpenItems","handleCloseItems","handleEditItems","edit","JSON","parse","stringify","handleSaveItems","items","updated","materials","handleSave","handleDateChange","date","document","title","customerName","changeValue","name","value","updateReport","changeField","event","target","changeCheckbox","checked","patch","then","res","variant","catch","err","job","po","customerStreet","customerCity","customerState","customerZip","customerPhone","machineType","machineSerial","control","controlSerial","plasmaType","plasmaModel","plasmaSerial","torches","oxyFuel","drive","driveSerial","reportedTrouble","getServerSideProps","context","id","params","get","response","data","props","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axiosClient from '../../src/axiosClient'\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux'\nimport { flatten } from 'lodash'\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles'\nimport Link from '../../src/Link'\nimport TopBar from '../../components/TopBar'\nimport numeral from 'numeral'\nconst priceFormat = '$0.00'\nimport moment from 'moment-timezone'\nconst dateFormat = 'YYYY-MM-DDTHH:mm:SS'\nconst dateDisplay = 'dddd MMM DD hh:mm a'\nimport {\n  Box,\n  Container,\n  Grid,\n  Checkbox,\n  Typography,\n  TextField,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Button,\n  FormControlLabel,\n  IconButton\n} from '@material-ui/core'\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport DateFnsUtils from '@date-io/date-fns'\nimport ReportItems from '../../components/ReportItems'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\n\nconst itemsAvailable = [\n  {\n    quantity: 1,\n    itemNo: '1',\n    itemName: 'one'\n  },\n  {\n    quantity: 1,\n    itemNo: '2',\n    itemName: 'two'\n  },\n  {\n    quantity: 1,\n    itemNo: '3',\n    itemName: 'three'\n  }\n]\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  formGroup: {\n    margin: 20,\n    padding: 20,\n    backgroundColor: '#fafafa',\n    border: '1px solid #ccc'\n  },\n  formGroupTop: {\n    margin: 20,\n    padding: 20\n  },\n  center: {\n    textAlign: 'center'\n  },\n  content: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    paddingRight: theme.spacing(5)\n  },\n  root: {\n    padding: 0,\n    flexGrow: 1\n  },\n  center: {\n    textAlign: 'center',\n    flexGrow: 1\n  },\n  lines: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  },\n  nolines: {\n    reportBottom: '2px solid white'\n  },\n  flexGrid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: 2,\n    padding: 2\n  },\n  textFieldWide: {\n    width: '100%',\n    margin: 2,\n    padding: 2\n  },\n  checkbox: {\n    marginTop: 6,\n    marginBottom: 6,\n    marginLeft: 16,\n    padding: 6\n  }\n}))\n\nconst Report = ({ propsReport, dispatch}) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [report, setReport] = React.useState(propsReport)\n  const [reportEdit, setReportEdit] = useState({})\n  const { enqueueSnackbar } = useSnackbar()\n  const [selectedDate, setSelectedDate] = React.useState(new Date())\n  const [openItems, setOpenItems] = React.useState(false)\n\n  const handleOpenItems = () => {\n    setOpenItems(true)\n  }\n\n  const handleCloseItems = () => {\n    setOpenItems(false)\n  }\n\n  const handleEditItems = () => {\n    const edit = JSON.parse(JSON.stringify(report))\n    setReportEdit(edit)\n    setOpenItems(true)\n  }\n\n  const handleSaveItems = async items => {\n    const updated = {\n      ...report,\n      materials: items\n    }\n    handleSave(updated)\n    handleCloseItems()\n  }\n\n  const handleDateChange = date => {\n    setSelectedDate(date)\n  }\n\n  useEffect(() => {\n    document.title = report.customerName\n  })\n\n  const changeValue = (name, value) => {\n    const updated = {\n      ...report,\n      [name]: value\n    }\n    setReport(updated)\n    updateReport(updated)\n  }\n\n  const changeField = event => {\n    changeValue(event.target.name, event.target.value)\n  }\n\n  const changeCheckbox = event => {\n    changeValue(event.target.name, event.target.checked)\n  }\n\n  const updateReport = async updateReport => {\n    await axiosClient\n      .patch('/reports', updateReport)\n      .then(res => {\n        enqueueSnackbar('Report Updated', {\n          variant: 'success'\n        })\n        setReport(updateReport)\n      })\n      .catch(err => {\n        enqueueSnackbar('Update Error', {\n          variant: 'error'\n        })\n      })\n  }\n\n  return (\n    <Container className={classes.root}>\n      <TopBar />\n      <div className={classes.content}>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          alignItems='flex-end'\n          justify='space-between'\n          className={classes.formGroupTop}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              name='job'\n              label='Job#'\n              defaultValue={report.job ? report.job : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant='inline'\n                format='MM/dd/yyyy'\n                id='date'\n                label='Date'\n                value={selectedDate}\n                onChange={handleDateChange}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              name='po'\n              label='PO#'\n              defaultValue={report.po ? report.po : ''}\n              onChange={changeField}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerName'\n              label='Customer Name'\n              defaultValue={report.customerName ? report.customerName : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerStreet'\n              label='Street Address'\n              defaultValue={report.customerStreet ? report.customerStreet : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerCity'\n              label='City'\n              defaultValue={report.customerCity ? report.customerCity : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerState'\n              label='State'\n              defaultValue={report.customerState ? report.customerState : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerZip'\n              label='Zip'\n              defaultValue={report.customerZip ? report.customerZip : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerPhone'\n              label='Phone'\n              defaultValue={report.customerPhone ? report.customerPhone : ''}\n              onChange={changeField}\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='machineType'\n              label='Machine Type'\n              defaultValue={report.machineType ? report.machineType : ''}\n              onChange={changeField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='machineSerial'\n              label='Machine Serial'\n              defaultValue={report.machineSerial ? report.machineSerial : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='control'\n              label='Control'\n              defaultValue={report.control ? report.control : ''}\n              onChange={changeField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='controlSerial'\n              label='Control Serial'\n              defaultValue={report.controlSerial ? report.controlSerial : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaType'\n              label='Plasma Type'\n              defaultValue={report.plasmaType ? report.plasmaType : ''}\n              onChange={changeField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaModel'\n              label='Plasma Model'\n              defaultValue={report.plasmaModel ? report.plasmaModel : ''}\n              onChange={changeField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaSerial'\n              label='Plasma Serial'\n              defaultValue={report.plasmaSerial ? report.plasmaSerial : ''}\n              onChange={changeField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='torches'\n              label='Torches'\n              type='number'\n              defaultValue={report.torches ? report.torches : ''}\n              onChange={changeField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.checkbox}\n                  checked={report.oxyFuel}\n                  onChange={changeCheckbox}\n                  name='oxyFuel'\n                  color='primary'\n                />\n              }\n              label='Oxy Fuel'\n            />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='drive'\n              label='Drive'\n              defaultValue={report.drive ? report.drive : ''}\n              onChange={changeField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='driveSerial'\n              label='Drive Serial'\n              defaultValue={report.driveSerial ? report.driveSerial : ''}\n              onChange={changeField}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Box width={1}>\n            <Grid item>\n              <TextField\n                className={classes.textFieldWide}\n                multiline={true}\n                variant='outlined'\n                name='reportedTrouble'\n                label='Reported Trouble'\n                defaultValue={\n                  report.reportedTrouble ? report.reportedTrouble : ''\n                }\n                onChange={changeField}\n              />\n            </Grid>\n          </Box>\n        </Grid>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Box width={1}>\n            <Grid item>\n              <Button\n                onClick={handleEditItems}\n                variant='contained'\n                color='secondary'\n                className={classes.button}\n                startIcon={<FormatListBulletedIcon />}\n              >\n                Materials Used\n              </Button>\n            </Grid>\n          </Box>\n        </Grid>\n        <ReportItems\n          handleSaveItems={handleSaveItems}\n          handleCloseItems={handleCloseItems}\n          openItems={openItems}\n          itemsAvailable={itemsAvailable}\n        />\n\n            <Grid\n              container\n              direction='row'\n              justify='flex-end'\n              alignItems='flex-end'\n            >\n              <Button\n                variant='contained'\n                color='secondary'\n                style={{ margin: 10 }}\n                onClick={handleCloseItems}\n                startIcon={<CancelIcon />}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                style={{ margin: 10 }}\n                onClick={() => updateReport(report)}\n                startIcon={<SaveIcon />}\n              >\n                Save\n              </Button>\n            </Grid>\n\n\n        {/*\n\n  \"materials\": [\n    {\n      \"quantity\": 1,\n      \"itemNo\": \"1\",\n      \"itemName\": \"test\"\n    }\n  ],\n  \"servicePerformed\": \"\",\n  \"issues\": [\n    {\n      \"description\": \"test\",\n      \"resolved\": false\n    }\n  ],\n  \"logs\": [\n    {\n      \"date\": \"\",\n      \"on\": \"\",\n      \"off\": \"\",\n      \"mileage\": 10,\n      \"hours\": 3.2,\n      \"lodging\": false,\n      \"toll\": false\n    }\n  ],\n  \"completed\": true,\n  \"satifaction\": true,\n  \"customerSignature\": \"\",\n  \"customerSignatureDate\": \"\",\n  \"servicemanSignature\": \"\",\n  \"servicemanSignatureDate\": \"\"\n\n        <Grid item container xs={12} spacing={2} justify='flex-end'>\n          <Grid item>\n            <Timeline>\n              {report.timeline.map((timestamp, index) => (\n                <TimelineItem key={index}>\n                  <TimelineSeparator>\n                    <TimelineDot />\n                    {index < report.timeline.length - 1 ? (\n                      <TimelineConnector />\n                    ) : (\n                      ''\n                    )}\n                  </TimelineSeparator>\n                  <TimelineContent>\n                    <Typography>\n                      {timestamp[`description_${langSuffix}`]}<p/>\n                      {moment(timestamp.timestamp, dateFormat)\n                        .locale(lang.substring(0, 2))\n                        .format(dateDisplay)}\n                    </Typography>\n                  </TimelineContent>\n                </TimelineItem>\n              ))}\n            </Timeline>\n          </Grid>\n          {report.timeline.length <= 1 ? (\n            <Grid item>\n              <Button\n                onClick={reportDelivered}\n                variant='contained'\n                color='primary'\n                className={classes.button}\n                startIcon={<CheckCircleIcon />}\n              >\n                {getLangString('report.delivered', lang)}\n              </Button>\n              <Button\n                onClick={reportCancelled}\n                variant='contained'\n                color='secondary'\n                className={classes.button}\n                startIcon={<CancelIcon />}\n              >\n                {getLangString('report.cancelled', lang)}\n              </Button>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </Grid>\n        */}\n      </div>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps (context) {\n  const { id } = context.params\n  const propsReport = await axiosClient\n    .get('/reports/' + id)\n    .then(response => response.data)\n\n  return {\n    props: {\n      propsReport\n    }\n  }\n}\n\nexport default connect(state => state)(Report)\n"]},"metadata":{},"sourceType":"module"}