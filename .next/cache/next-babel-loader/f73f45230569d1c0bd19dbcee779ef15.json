{"ast":null,"code":"var _jsxFileName = \"/Users/keith/cutting-ui/pages/report/[id].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport axiosClient from '../../src/axiosClient';\nimport { useSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\nimport { flatten } from 'lodash';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Link from '../../src/Link';\nimport TopBar from '../../components/TopBar';\nimport numeral from 'numeral';\nconst priceFormat = '$0.00';\nimport moment from 'moment-timezone';\nconst dateFormat = 'YYYY-MM-DDTHH:mm:SS';\nconst dateDisplay = 'dddd MMM DD hh:mm a';\nimport { Box, Container, Grid, Checkbox, Typography, TextField, List, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, Table, TableBody, TableCell, TableRow, Button, FormControlLabel, IconButton } from '@material-ui/core';\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\n\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport DateFnsUtils from '@date-io/date-fns';\nimport ReportItems from '../../components/ReportItems';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport Select from 'react-select';\nconst useStyles = makeStyles(theme => ({\n  toolbar: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar),\n  formGroup: {\n    margin: 20,\n    padding: 20,\n    backgroundColor: '#fafafa',\n    border: '1px solid #ccc'\n  },\n  formGroupTop: {\n    margin: 20,\n    padding: 20\n  },\n  center: {\n    textAlign: 'center'\n  },\n  content: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    paddingRight: theme.spacing(5)\n  },\n  root: {\n    padding: 0,\n    flexGrow: 1\n  },\n  center: {\n    textAlign: 'center',\n    flexGrow: 1\n  },\n  lines: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  },\n  nolines: {\n    reportBottom: '2px solid white'\n  },\n  flexGrid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: 2,\n    padding: 2\n  },\n  textFieldWide: {\n    width: '100%',\n    margin: 2,\n    padding: 2\n  },\n  checkbox: {\n    marginTop: 6,\n    marginBottom: 6,\n    marginLeft: 16,\n    padding: 6\n  }\n}));\nconst itemsAvailable = [{\n  quantity: 1,\n  itemNo: '1',\n  itemName: 'one'\n}, {\n  quantity: 1,\n  itemNo: '2',\n  itemName: 'two'\n}, {\n  quantity: 1,\n  itemNo: '3',\n  itemName: 'three'\n}];\n\nconst Report = ({\n  propsReport,\n  propsOptions,\n  dispatch,\n  token\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [report, setReport] = React.useState(propsReport);\n  const {\n    0: reportEdit,\n    1: setReportEdit\n  } = useState({});\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  /*\n  //Do we really need a modal here?\n  const [openItems, setOpenItems] = React.useState(false)\n   const handleOpenItems = () => {\n    setOpenItems(true)\n  }\n   const handleCloseItems = () => {\n    setOpenItems(false)\n  }\n   const handleEditItems = () => {\n    const edit = JSON.parse(JSON.stringify(report))\n    setReportEdit(edit)\n    setOpenItems(true)\n  }\n   const handleSaveItems = async options => {\n    const materials = options.map(option => {\n      const material = {\n        quantity: option.quantity,\n        type: option.type,\n        item: option.value,\n        description: option.label\n      }\n      return material\n    })\n    const updated = {\n      ...report,\n      materials\n    }\n    setReport(updated)\n    updateReport(updated)\n    handleCloseItems()\n  }\n  */\n\n  const onUnload = () => {\n    updateReport(report);\n  };\n\n  useEffect(() => {\n    document.title = report.customerName;\n    window.addEventListener('unload', onUnload);\n    return () => {\n      window.removeEventListener('unload', onUnload);\n    };\n  });\n\n  const changeValue = (name, value) => {\n    const updated = _objectSpread(_objectSpread({}, report), {}, {\n      [name]: value\n    });\n\n    setReport(updated);\n  };\n\n  const changeField = event => {\n    changeValue(event.target.name, event.target.value);\n  };\n\n  const blurField = event => {\n    updateReport(report);\n  };\n\n  const changeCheckbox = event => {\n    const updated = _objectSpread(_objectSpread({}, report), {}, {\n      [event.target.name]: event.target.checked\n    });\n\n    setReport(updated);\n    updateReport(updated);\n  };\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  const addMaterial = index => {\n    const updated = _objectSpread(_objectSpread({}, report), {}, {\n      materials: report.materials.map((material, i) => {\n        if (i === index) material.quantity += 1;\n        return material;\n      })\n    });\n\n    setReport(updated);\n    updateReport(updated);\n  };\n\n  const removeMaterial = index => {\n    const updated = _objectSpread(_objectSpread({}, report), {}, {\n      materials: report.materials.map((material, i) => {\n        if (i === index) material.quantity -= 1;\n        if (material.quantity === 0) return null;else return material;\n      }).filter(notNull => notNull)\n    });\n\n    setReport(updated);\n    updateReport(updated);\n  };\n\n  const selectMaterialOption = option => {\n    // Translate this from an option to a material\n    const material = {\n      quantity: 1,\n      type: option.type,\n      item: option.value,\n      description: option.label\n    };\n\n    const updated = _objectSpread(_objectSpread({}, report), {}, {\n      materials: [material].concat(report.materials)\n    });\n\n    setReport(updated);\n    updateReport(updated);\n  };\n\n  const updateReport = async updateReport => {\n    await axiosClient.patch('/reports', updateReport).then(res => {\n      //enqueueSnackbar('Report Updated', {\n      //  variant: 'success'\n      //})\n      setReport(updateReport);\n    }).catch(err => {//enqueueSnackbar('Update Error', {\n      //  variant: 'error'\n      //})\n    });\n  };\n\n  return __jsx(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 5\n    }\n  }, __jsx(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    alignItems: \"flex-end\",\n    justify: \"space-between\",\n    className: classes.formGroupTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"job\",\n    label: \"Job#\",\n    defaultValue: report.job ? report.job : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, __jsx(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    id: \"date\",\n    label: \"Date\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"po\",\n    label: \"PO#\",\n    defaultValue: report.po ? report.po : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerName\",\n    label: \"Customer Name\",\n    defaultValue: report.customerName ? report.customerName : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerStreet\",\n    label: \"Street Address\",\n    defaultValue: report.customerStreet ? report.customerStreet : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerCity\",\n    label: \"City\",\n    defaultValue: report.customerCity ? report.customerCity : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerState\",\n    label: \"State\",\n    defaultValue: report.customerState ? report.customerState : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerZip\",\n    label: \"Zip\",\n    defaultValue: report.customerZip ? report.customerZip : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerPhone\",\n    label: \"Phone\",\n    defaultValue: report.customerPhone ? report.customerPhone : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"machineType\",\n    label: \"Machine Type\",\n    defaultValue: report.machineType ? report.machineType : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"machineSerial\",\n    label: \"Machine Serial\",\n    defaultValue: report.machineSerial ? report.machineSerial : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"control\",\n    label: \"Control\",\n    defaultValue: report.control ? report.control : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"controlSerial\",\n    label: \"Control Serial\",\n    defaultValue: report.controlSerial ? report.controlSerial : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaType\",\n    label: \"Plasma Type\",\n    defaultValue: report.plasmaType ? report.plasmaType : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaModel\",\n    label: \"Plasma Model\",\n    defaultValue: report.plasmaModel ? report.plasmaModel : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaSerial\",\n    label: \"Plasma Serial\",\n    defaultValue: report.plasmaSerial ? report.plasmaSerial : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"torches\",\n    label: \"Torches\",\n    type: \"number\",\n    defaultValue: report.torches ? report.torches : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      className: classes.checkbox,\n      checked: report.oxyFuel,\n      onChange: changeCheckbox,\n      name: \"oxyFuel\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }\n    }),\n    label: \"Oxy Fuel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"drive\",\n    label: \"Drive\",\n    defaultValue: report.drive ? report.drive : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"driveSerial\",\n    label: \"Drive Serial\",\n    defaultValue: report.driveSerial ? report.driveSerial : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    className: classes.textFieldWide,\n    multiline: true,\n    variant: \"outlined\",\n    name: \"reportedTrouble\",\n    label: \"Reported Trouble\",\n    defaultValue: report.reportedTrouble ? report.reportedTrouble : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    width: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    style: {\n      margin: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 15\n    }\n  }, \"Materials Used\"), __jsx(Select, {\n    className: \"itemsSelect\",\n    classNamePrefix: \"select\",\n    isClearable: true,\n    isSearchable: true,\n    onChange: selectMaterialOption,\n    name: \"items\",\n    options: propsOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 15\n    }\n  }), __jsx(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 15\n    }\n  }, report.materials.map((material, index) => __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 19\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 21\n    }\n  }, material.quantity), __jsx(ListItemText, {\n    edge: \"begin\",\n    primary: `${material.item}`,\n    secondary: `${material.description}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 21\n    }\n  }), __jsx(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 21\n    }\n  }, __jsx(IconButton, {\n    onClick: () => addMaterial(index),\n    edge: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 23\n    }\n  }, __jsx(AddCircleOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 25\n    }\n  })), __jsx(IconButton, {\n    onClick: () => removeMaterial(index),\n    edge: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 23\n    }\n  }, __jsx(RemoveCircleOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 25\n    }\n  })))))))))));\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    id\n  } = context.params;\n  const propsReport = await axiosClient.get('/reports/' + id).then(response => response.data);\n  const items = await axiosClient.get('/items').then(response => response.data);\n  const propsOptions = items.map(item => {\n    const option = {\n      type: item.Type,\n      value: item.Item,\n      label: item.Description\n    };\n    return option;\n  });\n  return {\n    props: {\n      propsReport,\n      propsOptions\n    }\n  };\n}\nexport default connect(state => state)(Report);","map":{"version":3,"sources":["/Users/keith/cutting-ui/pages/report/[id].js"],"names":["React","useState","useEffect","axiosClient","useSnackbar","connect","flatten","fade","makeStyles","useTheme","Link","TopBar","numeral","priceFormat","moment","dateFormat","dateDisplay","Box","Container","Grid","Checkbox","Typography","TextField","List","ListItem","ListItemAvatar","ListItemText","ListItemSecondaryAction","Table","TableBody","TableCell","TableRow","Button","FormControlLabel","IconButton","FormatListBulletedIcon","CancelIcon","CheckCircleIcon","AddCircleOutlineIcon","RemoveCircleOutlineIcon","DateFnsUtils","ReportItems","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Select","useStyles","theme","toolbar","display","alignItems","justifyContent","padding","spacing","mixins","formGroup","margin","backgroundColor","border","formGroupTop","center","textAlign","content","flexGrow","paddingRight","root","lines","borderTop","borderLeft","borderRight","reportBottom","nolines","flexGrid","modal","button","textField","textFieldWide","width","checkbox","marginTop","marginBottom","marginLeft","itemsAvailable","quantity","itemNo","itemName","Report","propsReport","propsOptions","dispatch","token","classes","report","setReport","reportEdit","setReportEdit","enqueueSnackbar","selectedDate","setSelectedDate","Date","onUnload","updateReport","document","title","customerName","window","addEventListener","removeEventListener","changeValue","name","value","updated","changeField","event","target","blurField","changeCheckbox","checked","handleDateChange","date","addMaterial","index","materials","map","material","i","removeMaterial","filter","notNull","selectMaterialOption","option","type","item","description","label","concat","patch","then","res","catch","err","job","po","customerStreet","customerCity","customerState","customerZip","customerPhone","machineType","machineSerial","control","controlSerial","plasmaType","plasmaModel","plasmaSerial","torches","oxyFuel","drive","driveSerial","reportedTrouble","getServerSideProps","context","id","params","get","response","data","items","Type","Item","Description","props","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axiosClient from '../../src/axiosClient'\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux'\nimport { flatten } from 'lodash'\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles'\nimport Link from '../../src/Link'\nimport TopBar from '../../components/TopBar'\nimport numeral from 'numeral'\nconst priceFormat = '$0.00'\nimport moment from 'moment-timezone'\nconst dateFormat = 'YYYY-MM-DDTHH:mm:SS'\nconst dateDisplay = 'dddd MMM DD hh:mm a'\nimport {\n  Box,\n  Container,\n  Grid,\n  Checkbox,\n  Typography,\n  TextField,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Button,\n  FormControlLabel,\n  IconButton\n} from '@material-ui/core'\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline'\nimport DateFnsUtils from '@date-io/date-fns'\nimport ReportItems from '../../components/ReportItems'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\nimport Select from 'react-select'\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  formGroup: {\n    margin: 20,\n    padding: 20,\n    backgroundColor: '#fafafa',\n    border: '1px solid #ccc'\n  },\n  formGroupTop: {\n    margin: 20,\n    padding: 20\n  },\n  center: {\n    textAlign: 'center'\n  },\n  content: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    paddingRight: theme.spacing(5)\n  },\n  root: {\n    padding: 0,\n    flexGrow: 1\n  },\n  center: {\n    textAlign: 'center',\n    flexGrow: 1\n  },\n  lines: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  },\n  nolines: {\n    reportBottom: '2px solid white'\n  },\n  flexGrid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: 2,\n    padding: 2\n  },\n  textFieldWide: {\n    width: '100%',\n    margin: 2,\n    padding: 2\n  },\n  checkbox: {\n    marginTop: 6,\n    marginBottom: 6,\n    marginLeft: 16,\n    padding: 6\n  }\n}))\n\nconst itemsAvailable = [\n  {\n    quantity: 1,\n    itemNo: '1',\n    itemName: 'one'\n  },\n  {\n    quantity: 1,\n    itemNo: '2',\n    itemName: 'two'\n  },\n  {\n    quantity: 1,\n    itemNo: '3',\n    itemName: 'three'\n  }\n]\n\nconst Report = ({ propsReport, propsOptions, dispatch, token }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [report, setReport] = React.useState(propsReport)\n  const [reportEdit, setReportEdit] = useState({})\n  const { enqueueSnackbar } = useSnackbar()\n  const [selectedDate, setSelectedDate] = React.useState(new Date())\n\n  /*\n  //Do we really need a modal here?\n  const [openItems, setOpenItems] = React.useState(false)\n\n  const handleOpenItems = () => {\n    setOpenItems(true)\n  }\n\n  const handleCloseItems = () => {\n    setOpenItems(false)\n  }\n\n  const handleEditItems = () => {\n    const edit = JSON.parse(JSON.stringify(report))\n    setReportEdit(edit)\n    setOpenItems(true)\n  }\n\n  const handleSaveItems = async options => {\n    const materials = options.map(option => {\n      const material = {\n        quantity: option.quantity,\n        type: option.type,\n        item: option.value,\n        description: option.label\n      }\n      return material\n    })\n    const updated = {\n      ...report,\n      materials\n    }\n    setReport(updated)\n    updateReport(updated)\n    handleCloseItems()\n  }\n  */\n\n  const onUnload = () => {\n    updateReport(report)\n  }\n\n  useEffect(() => {\n    document.title = report.customerName\n    window.addEventListener('unload', onUnload)\n    return () => {\n      window.removeEventListener('unload', onUnload)\n    }\n  })\n\n  const changeValue = (name, value) => {\n    const updated = {\n      ...report,\n      [name]: value\n    }\n    setReport(updated)\n  }\n\n  const changeField = event => {\n    changeValue(event.target.name, event.target.value)\n  }\n\n  const blurField = event => {\n    updateReport(report)\n  }\n\n  const changeCheckbox = event => {\n    const updated = {\n      ...report,\n      [event.target.name]: event.target.checked\n    }\n    setReport(updated)\n    updateReport(updated)\n  }\n\n  const handleDateChange = date => {\n    setSelectedDate(date)\n  }\n\n  const addMaterial = index => {\n    const updated = {\n      ...report,\n      materials: report.materials.map((material, i) => {\n        if (i === index) material.quantity += 1\n        return material\n      })\n    }\n    setReport(updated)\n    updateReport(updated)\n  }\n\n  const removeMaterial = index => {\n    const updated = {\n      ...report,\n      materials: report.materials\n        .map((material, i) => {\n          if (i === index) material.quantity -= 1\n          if (material.quantity === 0) return null\n          else return material\n        })\n        .filter(notNull => notNull)\n    }\n    setReport(updated)\n    updateReport(updated)\n  }\n\n  const selectMaterialOption = option => {\n    // Translate this from an option to a material\n    const material = {\n      quantity: 1,\n      type: option.type,\n      item: option.value,\n      description: option.label\n    }\n    const updated = {\n      ...report,\n      materials: [material].concat(report.materials)\n    }\n    setReport(updated)\n    updateReport(updated)\n  }\n\n  const updateReport = async updateReport => {\n    await axiosClient\n      .patch('/reports', updateReport)\n      .then(res => {\n        //enqueueSnackbar('Report Updated', {\n        //  variant: 'success'\n        //})\n        setReport(updateReport)\n      })\n      .catch(err => {\n        //enqueueSnackbar('Update Error', {\n        //  variant: 'error'\n        //})\n      })\n  }\n\n  return (\n    <Container className={classes.root}>\n      <TopBar />\n      <div className={classes.content}>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          alignItems='flex-end'\n          justify='space-between'\n          className={classes.formGroupTop}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              name='job'\n              label='Job#'\n              defaultValue={report.job ? report.job : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant='inline'\n                format='MM/dd/yyyy'\n                id='date'\n                label='Date'\n                value={selectedDate}\n                onChange={handleDateChange}\n                onBlur={blurField}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              name='po'\n              label='PO#'\n              defaultValue={report.po ? report.po : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerName'\n              label='Customer Name'\n              defaultValue={report.customerName ? report.customerName : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerStreet'\n              label='Street Address'\n              defaultValue={report.customerStreet ? report.customerStreet : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerCity'\n              label='City'\n              defaultValue={report.customerCity ? report.customerCity : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerState'\n              label='State'\n              defaultValue={report.customerState ? report.customerState : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerZip'\n              label='Zip'\n              defaultValue={report.customerZip ? report.customerZip : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerPhone'\n              label='Phone'\n              defaultValue={report.customerPhone ? report.customerPhone : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='machineType'\n              label='Machine Type'\n              defaultValue={report.machineType ? report.machineType : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='machineSerial'\n              label='Machine Serial'\n              defaultValue={report.machineSerial ? report.machineSerial : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='control'\n              label='Control'\n              defaultValue={report.control ? report.control : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='controlSerial'\n              label='Control Serial'\n              defaultValue={report.controlSerial ? report.controlSerial : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaType'\n              label='Plasma Type'\n              defaultValue={report.plasmaType ? report.plasmaType : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaModel'\n              label='Plasma Model'\n              defaultValue={report.plasmaModel ? report.plasmaModel : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaSerial'\n              label='Plasma Serial'\n              defaultValue={report.plasmaSerial ? report.plasmaSerial : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='torches'\n              label='Torches'\n              type='number'\n              defaultValue={report.torches ? report.torches : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.checkbox}\n                  checked={report.oxyFuel}\n                  onChange={changeCheckbox}\n                  name='oxyFuel'\n                  color='primary'\n                />\n              }\n              label='Oxy Fuel'\n            />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='drive'\n              label='Drive'\n              defaultValue={report.drive ? report.drive : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='driveSerial'\n              label='Drive Serial'\n              defaultValue={report.driveSerial ? report.driveSerial : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Box width={1}>\n            <Grid item>\n              <TextField\n                className={classes.textFieldWide}\n                multiline={true}\n                variant='outlined'\n                name='reportedTrouble'\n                label='Reported Trouble'\n                defaultValue={\n                  report.reportedTrouble ? report.reportedTrouble : ''\n                }\n                onChange={changeField}\n                onBlur={blurField}\n              />\n            </Grid>\n          </Box>\n        </Grid>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Box width={1}>\n            <Grid item>\n              {/*\n              <Button\n                onClick={handleEditItems}\n                variant='contained'\n                color='secondary'\n                className={classes.button}\n                startIcon={<FormatListBulletedIcon />}\n              >\n                Materials Used\n              </Button>\n              */}\n              <Typography style={{ margin: 6 }}>Materials Used</Typography>\n              <Select\n                className='itemsSelect'\n                classNamePrefix='select'\n                isClearable={true}\n                isSearchable={true}\n                onChange={selectMaterialOption}\n                name='items'\n                options={propsOptions}\n              />\n              <List dense={true}>\n                {report.materials.map((material, index) => (\n                  <ListItem>\n                    <ListItemAvatar>{material.quantity}</ListItemAvatar>\n                    <ListItemText\n                      edge='begin'\n                      primary={`${material.item}`}\n                      secondary={`${material.description}`}\n                    />\n                    <ListItemSecondaryAction>\n                      <IconButton onClick={() => addMaterial(index)} edge='end'>\n                        <AddCircleOutlineIcon />\n                      </IconButton>\n                      <IconButton\n                        onClick={() => removeMaterial(index)}\n                        edge='end'\n                      >\n                        <RemoveCircleOutlineIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </Grid>\n          </Box>\n        </Grid>\n        {/*\n        <ReportItems\n          handleSaveItems={handleSaveItems}\n          handleCloseItems={handleCloseItems}\n          openItems={openItems}\n          itemOptions={propsOptions}\n        />\n       \nNot sure if I even want save cancel buttons.\n            <Grid\n              container\n              direction='row'\n              justify='flex-end'\n              alignItems='flex-end'\n            >\n              <Button\n                variant='contained'\n                color='secondary'\n                style={{ margin: 10 }}\n                onClick={handleCloseItems}\n                startIcon={<CancelIcon />}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                style={{ margin: 10 }}\n                onClick={() => updateReport(report)}\n                startIcon={<SaveIcon />}\n              >\n                Save\n              </Button>\n            </Grid>\n*/}\n\n        {/*\n\n  \"materials\": [\n    {\n      \"quantity\": 1,\n      \"itemNo\": \"1\",\n      \"itemName\": \"test\"\n    }\n  ],\n  \"servicePerformed\": \"\",\n  \"issues\": [\n    {\n      \"description\": \"test\",\n      \"resolved\": false\n    }\n  ],\n  \"logs\": [\n    {\n      \"date\": \"\",\n      \"on\": \"\",\n      \"off\": \"\",\n      \"mileage\": 10,\n      \"hours\": 3.2,\n      \"lodging\": false,\n      \"toll\": false\n    }\n  ],\n  \"completed\": true,\n  \"satifaction\": true,\n  \"customerSignature\": \"\",\n  \"customerSignatureDate\": \"\",\n  \"servicemanSignature\": \"\",\n  \"servicemanSignatureDate\": \"\"\n\n        <Grid item container xs={12} spacing={2} justify='flex-end'>\n          <Grid item>\n            <Timeline>\n              {report.timeline.map((timestamp, index) => (\n                <TimelineItem key={index}>\n                  <TimelineSeparator>\n                    <TimelineDot />\n                    {index < report.timeline.length - 1 ? (\n                      <TimelineConnector />\n                    ) : (\n                      ''\n                    )}\n                  </TimelineSeparator>\n                  <TimelineContent>\n                    <Typography>\n                      {timestamp[`description_${langSuffix}`]}<p/>\n                      {moment(timestamp.timestamp, dateFormat)\n                        .locale(lang.substring(0, 2))\n                        .format(dateDisplay)}\n                    </Typography>\n                  </TimelineContent>\n                </TimelineItem>\n              ))}\n            </Timeline>\n          </Grid>\n          {report.timeline.length <= 1 ? (\n            <Grid item>\n              <Button\n                onClick={reportDelivered}\n                variant='contained'\n                color='primary'\n                className={classes.button}\n                startIcon={<CheckCircleIcon />}\n              >\n                {getLangString('report.delivered', lang)}\n              </Button>\n              <Button\n                onClick={reportCancelled}\n                variant='contained'\n                color='secondary'\n                className={classes.button}\n                startIcon={<CancelIcon />}\n              >\n                {getLangString('report.cancelled', lang)}\n              </Button>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </Grid>\n        */}\n      </div>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps (context) {\n  const { id } = context.params\n\n  const propsReport = await axiosClient\n    .get('/reports/' + id)\n    .then(response => response.data)\n\n  const items = await axiosClient.get('/items').then(response => response.data)\n\n  const propsOptions = items.map(item => {\n    const option = {\n      type: item.Type,\n      value: item.Item,\n      label: item.Description\n    }\n    return option\n  })\n\n  return {\n    props: {\n      propsReport,\n      propsOptions\n    }\n  }\n}\n\nexport default connect(state => state)(Report)\n"]},"metadata":{},"sourceType":"module"}