{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/keith/cutting-ui/pages/report/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport axiosClient from '../../src/axiosClient';\nimport { useSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\nimport { flatten } from 'lodash';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Link from '../../src/Link';\nimport TopBar from '../../components/TopBar';\nimport numeral from 'numeral';\nvar priceFormat = '$0.00';\nimport moment from 'moment-timezone';\nvar dateFormat = 'YYYY-MM-DDTHH:mm:SS';\nvar dateDisplay = 'dddd MMM DD hh:mm a';\nimport { Box, Container, Grid, Checkbox, Typography, TextField, List, ListItem, ListItemAvatar, ListItemText, Table, TableBody, TableCell, TableRow, Button, FormControlLabel, IconButton } from '@material-ui/core';\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\n\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport DateFnsUtils from '@date-io/date-fns';\nimport ReportItems from '../../components/ReportItems';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nvar useStyles = makeStyles(function (theme) {\n  var _ref;\n\n  return _ref = {\n    toolbar: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1)\n    }, theme.mixins.toolbar),\n    formGroup: {\n      margin: 20,\n      padding: 20,\n      backgroundColor: '#fafafa',\n      border: '1px solid #ccc'\n    },\n    formGroupTop: {\n      margin: 20,\n      padding: 20\n    },\n    center: {\n      textAlign: 'center'\n    },\n    content: {\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      flexGrow: 1,\n      paddingRight: theme.spacing(5)\n    },\n    root: {\n      padding: 0,\n      flexGrow: 1\n    }\n  }, _defineProperty(_ref, \"center\", {\n    textAlign: 'center',\n    flexGrow: 1\n  }), _defineProperty(_ref, \"lines\", {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  }), _defineProperty(_ref, \"nolines\", {\n    reportBottom: '2px solid white'\n  }), _defineProperty(_ref, \"flexGrid\", {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  }), _defineProperty(_ref, \"modal\", {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }), _defineProperty(_ref, \"button\", {\n    margin: theme.spacing(1)\n  }), _defineProperty(_ref, \"textField\", {\n    margin: 2,\n    padding: 2\n  }), _defineProperty(_ref, \"textFieldWide\", {\n    width: '100%',\n    margin: 2,\n    padding: 2\n  }), _defineProperty(_ref, \"checkbox\", {\n    marginTop: 6,\n    marginBottom: 6,\n    marginLeft: 16,\n    padding: 6\n  }), _ref;\n});\nvar itemsAvailable = [{\n  quantity: 1,\n  itemNo: '1',\n  itemName: 'one'\n}, {\n  quantity: 1,\n  itemNo: '2',\n  itemName: 'two'\n}, {\n  quantity: 1,\n  itemNo: '3',\n  itemName: 'three'\n}];\n\nvar Report = function Report(_ref2) {\n  _s();\n\n  var propsReport = _ref2.propsReport,\n      propsOptions = _ref2.propsOptions,\n      dispatch = _ref2.dispatch,\n      token = _ref2.token;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(propsReport),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      report = _React$useState2[0],\n      setReport = _React$useState2[1];\n\n  var _useState = useState({}),\n      reportEdit = _useState[0],\n      setReportEdit = _useState[1];\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _React$useState3 = React.useState(new Date()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedDate = _React$useState4[0],\n      setSelectedDate = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      openItems = _React$useState6[0],\n      setOpenItems = _React$useState6[1];\n\n  var handleOpenItems = function handleOpenItems() {\n    setOpenItems(true);\n  };\n\n  var handleCloseItems = function handleCloseItems() {\n    setOpenItems(false);\n  };\n\n  var handleEditItems = function handleEditItems() {\n    var edit = JSON.parse(JSON.stringify(report));\n    setReportEdit(edit);\n    setOpenItems(true);\n  };\n\n  var handleSaveItems = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(items) {\n      var updated;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              updated = _objectSpread(_objectSpread({}, report), {}, {\n                materials: items\n              });\n              handleSave(updated);\n              handleCloseItems();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSaveItems(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onUnload = function onUnload() {\n    updateReport(report);\n  };\n\n  useEffect(function () {\n    document.title = report.customerName;\n    window.addEventListener('unload', onUnload);\n    return function () {\n      window.removeEventListener('unload', onUnload);\n    };\n  });\n  useEffect(function () {\n    alert(JSON.stringify(propsOptions));\n  }, []);\n\n  var changeValue = function changeValue(name, value) {\n    var updated = _objectSpread(_objectSpread({}, report), {}, _defineProperty({}, name, value));\n\n    setReport(updated);\n  };\n\n  var changeField = function changeField(event) {\n    changeValue(event.target.name, event.target.value);\n  };\n\n  var blurField = function blurField(event) {\n    updateReport(report);\n  };\n\n  var changeCheckbox = function changeCheckbox(event) {\n    var updated = _objectSpread(_objectSpread({}, report), {}, _defineProperty({}, event.target.name, event.target.checked));\n\n    setReport(updated);\n    updateReport(updated);\n  };\n\n  var handleDateChange = function handleDateChange(date) {\n    setSelectedDate(date);\n  };\n\n  var updateReport = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_updateReport) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axiosClient.patch('/reports', _updateReport).then(function (res) {\n                //enqueueSnackbar('Report Updated', {\n                //  variant: 'success'\n                //})\n                setReport(_updateReport);\n              })[\"catch\"](function (err) {//enqueueSnackbar('Update Error', {\n                //  variant: 'error'\n                //})\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updateReport(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Container, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, __jsx(TopBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    alignItems: \"flex-end\",\n    justify: \"space-between\",\n    className: classes.formGroupTop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"job\",\n    label: \"Job#\",\n    defaultValue: report.job ? report.job : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, __jsx(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    id: \"date\",\n    label: \"Date\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"po\",\n    label: \"PO#\",\n    defaultValue: report.po ? report.po : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerName\",\n    label: \"Customer Name\",\n    defaultValue: report.customerName ? report.customerName : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerStreet\",\n    label: \"Street Address\",\n    defaultValue: report.customerStreet ? report.customerStreet : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerCity\",\n    label: \"City\",\n    defaultValue: report.customerCity ? report.customerCity : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerState\",\n    label: \"State\",\n    defaultValue: report.customerState ? report.customerState : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerZip\",\n    label: \"Zip\",\n    defaultValue: report.customerZip ? report.customerZip : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerPhone\",\n    label: \"Phone\",\n    defaultValue: report.customerPhone ? report.customerPhone : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"machineType\",\n    label: \"Machine Type\",\n    defaultValue: report.machineType ? report.machineType : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"machineSerial\",\n    label: \"Machine Serial\",\n    defaultValue: report.machineSerial ? report.machineSerial : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"control\",\n    label: \"Control\",\n    defaultValue: report.control ? report.control : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"controlSerial\",\n    label: \"Control Serial\",\n    defaultValue: report.controlSerial ? report.controlSerial : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaType\",\n    label: \"Plasma Type\",\n    defaultValue: report.plasmaType ? report.plasmaType : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaModel\",\n    label: \"Plasma Model\",\n    defaultValue: report.plasmaModel ? report.plasmaModel : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaSerial\",\n    label: \"Plasma Serial\",\n    defaultValue: report.plasmaSerial ? report.plasmaSerial : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"torches\",\n    label: \"Torches\",\n    type: \"number\",\n    defaultValue: report.torches ? report.torches : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      className: classes.checkbox,\n      checked: report.oxyFuel,\n      onChange: changeCheckbox,\n      name: \"oxyFuel\",\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }\n    }),\n    label: \"Oxy Fuel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"drive\",\n    label: \"Drive\",\n    defaultValue: report.drive ? report.drive : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }), \"\\xA0\\xA0\\xA0\\xA0\", __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"driveSerial\",\n    label: \"Drive Serial\",\n    defaultValue: report.driveSerial ? report.driveSerial : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    width: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    className: classes.textFieldWide,\n    multiline: true,\n    variant: \"outlined\",\n    name: \"reportedTrouble\",\n    label: \"Reported Trouble\",\n    defaultValue: report.reportedTrouble ? report.reportedTrouble : '',\n    onChange: changeField,\n    onBlur: blurField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    width: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: handleEditItems,\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    startIcon: __jsx(FormatListBulletedIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 28\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 15\n    }\n  }, \"Materials Used\")))), __jsx(ReportItems, {\n    handleSaveItems: handleSaveItems,\n    handleCloseItems: handleCloseItems,\n    openItems: openItems,\n    itemOptions: propsOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Report, \"E+tHA8CoRJluQ32kwhJqb3JjSDU=\", false, function () {\n  return [useStyles, useTheme, useSnackbar];\n});\n\n_c = Report;\nexport var __N_SSP = true;\nexport default connect(function (state) {\n  return state;\n})(Report);\n\nvar _c;\n\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"sources":["/Users/keith/cutting-ui/pages/report/[id].js"],"names":["React","useState","useEffect","axiosClient","useSnackbar","connect","flatten","fade","makeStyles","useTheme","Link","TopBar","numeral","priceFormat","moment","dateFormat","dateDisplay","Box","Container","Grid","Checkbox","Typography","TextField","List","ListItem","ListItemAvatar","ListItemText","Table","TableBody","TableCell","TableRow","Button","FormControlLabel","IconButton","FormatListBulletedIcon","CancelIcon","CheckCircleIcon","AddCircleOutlineIcon","DateFnsUtils","ReportItems","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","useStyles","theme","toolbar","display","alignItems","justifyContent","padding","spacing","mixins","formGroup","margin","backgroundColor","border","formGroupTop","center","textAlign","content","flexGrow","paddingRight","root","borderTop","borderLeft","borderRight","reportBottom","width","marginTop","marginBottom","marginLeft","itemsAvailable","quantity","itemNo","itemName","Report","propsReport","propsOptions","dispatch","token","classes","report","setReport","reportEdit","setReportEdit","enqueueSnackbar","Date","selectedDate","setSelectedDate","openItems","setOpenItems","handleOpenItems","handleCloseItems","handleEditItems","edit","JSON","parse","stringify","handleSaveItems","items","updated","materials","handleSave","onUnload","updateReport","document","title","customerName","window","addEventListener","removeEventListener","alert","changeValue","name","value","changeField","event","target","blurField","changeCheckbox","checked","handleDateChange","date","patch","then","res","err","textField","job","po","customerStreet","customerCity","customerState","customerZip","customerPhone","machineType","machineSerial","control","controlSerial","plasmaType","plasmaModel","plasmaSerial","torches","checkbox","oxyFuel","drive","driveSerial","textFieldWide","reportedTrouble","button","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axiosClient from '../../src/axiosClient'\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux'\nimport { flatten } from 'lodash'\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles'\nimport Link from '../../src/Link'\nimport TopBar from '../../components/TopBar'\nimport numeral from 'numeral'\nconst priceFormat = '$0.00'\nimport moment from 'moment-timezone'\nconst dateFormat = 'YYYY-MM-DDTHH:mm:SS'\nconst dateDisplay = 'dddd MMM DD hh:mm a'\nimport {\n  Box,\n  Container,\n  Grid,\n  Checkbox,\n  Typography,\n  TextField,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Button,\n  FormControlLabel,\n  IconButton\n} from '@material-ui/core'\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport DateFnsUtils from '@date-io/date-fns'\nimport ReportItems from '../../components/ReportItems'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  formGroup: {\n    margin: 20,\n    padding: 20,\n    backgroundColor: '#fafafa',\n    border: '1px solid #ccc'\n  },\n  formGroupTop: {\n    margin: 20,\n    padding: 20\n  },\n  center: {\n    textAlign: 'center'\n  },\n  content: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    paddingRight: theme.spacing(5)\n  },\n  root: {\n    padding: 0,\n    flexGrow: 1\n  },\n  center: {\n    textAlign: 'center',\n    flexGrow: 1\n  },\n  lines: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  },\n  nolines: {\n    reportBottom: '2px solid white'\n  },\n  flexGrid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: 2,\n    padding: 2\n  },\n  textFieldWide: {\n    width: '100%',\n    margin: 2,\n    padding: 2\n  },\n  checkbox: {\n    marginTop: 6,\n    marginBottom: 6,\n    marginLeft: 16,\n    padding: 6\n  }\n}))\n\nconst itemsAvailable = [\n  {\n    quantity: 1,\n    itemNo: '1',\n    itemName: 'one'\n  },\n  {\n    quantity: 1,\n    itemNo: '2',\n    itemName: 'two'\n  },\n  {\n    quantity: 1,\n    itemNo: '3',\n    itemName: 'three'\n  }\n]\n\nconst Report = ({ propsReport, propsOptions, dispatch, token }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [report, setReport] = React.useState(propsReport)\n  const [reportEdit, setReportEdit] = useState({})\n  const { enqueueSnackbar } = useSnackbar()\n  const [selectedDate, setSelectedDate] = React.useState(new Date())\n  const [openItems, setOpenItems] = React.useState(false)\n\n  const handleOpenItems = () => {\n    setOpenItems(true)\n  }\n\n  const handleCloseItems = () => {\n    setOpenItems(false)\n  }\n\n  const handleEditItems = () => {\n    const edit = JSON.parse(JSON.stringify(report))\n    setReportEdit(edit)\n    setOpenItems(true)\n  }\n\n  const handleSaveItems = async items => {\n    const updated = {\n      ...report,\n      materials: items\n    }\n    handleSave(updated)\n    handleCloseItems()\n  }\n\n  const onUnload = () => {\n    updateReport(report)\n  }\n\n  useEffect(() => {\n    document.title = report.customerName\n    window.addEventListener('unload', onUnload)\n    return () => {\n      window.removeEventListener('unload', onUnload)\n    }\n  })\n\n  useEffect(() => {\n    alert(JSON.stringify(propsOptions))\n  }, [])\n\n  const changeValue = (name, value) => {\n    const updated = {\n      ...report,\n      [name]: value\n    }\n    setReport(updated)\n  }\n\n  const changeField = event => {\n    changeValue(event.target.name, event.target.value)\n  }\n\n  const blurField = event => {\n    updateReport(report)\n  }\n\n  const changeCheckbox = event => {\n    const updated = {\n      ...report,\n      [event.target.name]: event.target.checked\n    }\n    setReport(updated)\n    updateReport(updated)\n  }\n\n  const handleDateChange = date => {\n    setSelectedDate(date)\n  }\n\n  const updateReport = async updateReport => {\n    await axiosClient\n      .patch('/reports', updateReport)\n      .then(res => {\n        //enqueueSnackbar('Report Updated', {\n        //  variant: 'success'\n        //})\n        setReport(updateReport)\n      })\n      .catch(err => {\n        //enqueueSnackbar('Update Error', {\n        //  variant: 'error'\n        //})\n      })\n  }\n\n  return (\n    <Container className={classes.root}>\n      <TopBar />\n      <div className={classes.content}>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          alignItems='flex-end'\n          justify='space-between'\n          className={classes.formGroupTop}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              name='job'\n              label='Job#'\n              defaultValue={report.job ? report.job : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant='inline'\n                format='MM/dd/yyyy'\n                id='date'\n                label='Date'\n                value={selectedDate}\n                onChange={handleDateChange}\n                onBlur={blurField}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              name='po'\n              label='PO#'\n              defaultValue={report.po ? report.po : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerName'\n              label='Customer Name'\n              defaultValue={report.customerName ? report.customerName : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerStreet'\n              label='Street Address'\n              defaultValue={report.customerStreet ? report.customerStreet : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerCity'\n              label='City'\n              defaultValue={report.customerCity ? report.customerCity : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerState'\n              label='State'\n              defaultValue={report.customerState ? report.customerState : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerZip'\n              label='Zip'\n              defaultValue={report.customerZip ? report.customerZip : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerPhone'\n              label='Phone'\n              defaultValue={report.customerPhone ? report.customerPhone : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='machineType'\n              label='Machine Type'\n              defaultValue={report.machineType ? report.machineType : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='machineSerial'\n              label='Machine Serial'\n              defaultValue={report.machineSerial ? report.machineSerial : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='control'\n              label='Control'\n              defaultValue={report.control ? report.control : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='controlSerial'\n              label='Control Serial'\n              defaultValue={report.controlSerial ? report.controlSerial : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaType'\n              label='Plasma Type'\n              defaultValue={report.plasmaType ? report.plasmaType : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaModel'\n              label='Plasma Model'\n              defaultValue={report.plasmaModel ? report.plasmaModel : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaSerial'\n              label='Plasma Serial'\n              defaultValue={report.plasmaSerial ? report.plasmaSerial : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='torches'\n              label='Torches'\n              type='number'\n              defaultValue={report.torches ? report.torches : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.checkbox}\n                  checked={report.oxyFuel}\n                  onChange={changeCheckbox}\n                  name='oxyFuel'\n                  color='primary'\n                />\n              }\n              label='Oxy Fuel'\n            />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='drive'\n              label='Drive'\n              defaultValue={report.drive ? report.drive : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='driveSerial'\n              label='Drive Serial'\n              defaultValue={report.driveSerial ? report.driveSerial : ''}\n              onChange={changeField}\n              onBlur={blurField}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Box width={1}>\n            <Grid item>\n              <TextField\n                className={classes.textFieldWide}\n                multiline={true}\n                variant='outlined'\n                name='reportedTrouble'\n                label='Reported Trouble'\n                defaultValue={\n                  report.reportedTrouble ? report.reportedTrouble : ''\n                }\n                onChange={changeField}\n                onBlur={blurField}\n              />\n            </Grid>\n          </Box>\n        </Grid>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Box width={1}>\n            <Grid item>\n              <Button\n                onClick={handleEditItems}\n                variant='contained'\n                color='secondary'\n                className={classes.button}\n                startIcon={<FormatListBulletedIcon />}\n              >\n                Materials Used\n              </Button>\n            </Grid>\n          </Box>\n        </Grid>\n        <ReportItems\n          handleSaveItems={handleSaveItems}\n          handleCloseItems={handleCloseItems}\n          openItems={openItems}\n          itemOptions={propsOptions}\n        />\n        {/*\nNot sure if I even want save cancel buttons.\n            <Grid\n              container\n              direction='row'\n              justify='flex-end'\n              alignItems='flex-end'\n            >\n              <Button\n                variant='contained'\n                color='secondary'\n                style={{ margin: 10 }}\n                onClick={handleCloseItems}\n                startIcon={<CancelIcon />}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant='contained'\n                color='primary'\n                style={{ margin: 10 }}\n                onClick={() => updateReport(report)}\n                startIcon={<SaveIcon />}\n              >\n                Save\n              </Button>\n            </Grid>\n*/}\n\n        {/*\n\n  \"materials\": [\n    {\n      \"quantity\": 1,\n      \"itemNo\": \"1\",\n      \"itemName\": \"test\"\n    }\n  ],\n  \"servicePerformed\": \"\",\n  \"issues\": [\n    {\n      \"description\": \"test\",\n      \"resolved\": false\n    }\n  ],\n  \"logs\": [\n    {\n      \"date\": \"\",\n      \"on\": \"\",\n      \"off\": \"\",\n      \"mileage\": 10,\n      \"hours\": 3.2,\n      \"lodging\": false,\n      \"toll\": false\n    }\n  ],\n  \"completed\": true,\n  \"satifaction\": true,\n  \"customerSignature\": \"\",\n  \"customerSignatureDate\": \"\",\n  \"servicemanSignature\": \"\",\n  \"servicemanSignatureDate\": \"\"\n\n        <Grid item container xs={12} spacing={2} justify='flex-end'>\n          <Grid item>\n            <Timeline>\n              {report.timeline.map((timestamp, index) => (\n                <TimelineItem key={index}>\n                  <TimelineSeparator>\n                    <TimelineDot />\n                    {index < report.timeline.length - 1 ? (\n                      <TimelineConnector />\n                    ) : (\n                      ''\n                    )}\n                  </TimelineSeparator>\n                  <TimelineContent>\n                    <Typography>\n                      {timestamp[`description_${langSuffix}`]}<p/>\n                      {moment(timestamp.timestamp, dateFormat)\n                        .locale(lang.substring(0, 2))\n                        .format(dateDisplay)}\n                    </Typography>\n                  </TimelineContent>\n                </TimelineItem>\n              ))}\n            </Timeline>\n          </Grid>\n          {report.timeline.length <= 1 ? (\n            <Grid item>\n              <Button\n                onClick={reportDelivered}\n                variant='contained'\n                color='primary'\n                className={classes.button}\n                startIcon={<CheckCircleIcon />}\n              >\n                {getLangString('report.delivered', lang)}\n              </Button>\n              <Button\n                onClick={reportCancelled}\n                variant='contained'\n                color='secondary'\n                className={classes.button}\n                startIcon={<CancelIcon />}\n              >\n                {getLangString('report.cancelled', lang)}\n              </Button>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </Grid>\n        */}\n      </div>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps (context) {\n  const { id } = context.params\n\n  const propsReport = await axiosClient\n    .get('/reports/' + id)\n    .then(response => response.data)\n\n  const items = await axiosClient.get('/items').then(response => response.data)\n\n  const propsOptions = items.map(item => {\n    try {\n      const parsed = JSON.parse(item)\n      const option = {\n        type: parsed.Type,\n        value: parsed.Item,\n        label: parsed.Description\n      }\n      return option\n    } catch (e) {\n      return null\n    }\n  })\n\n  return {\n    props: {\n      propsReport,\n      propsOptions\n    }\n  }\n}\n\nexport default connect(state => state)(Report)\n"]},"metadata":{},"sourceType":"module"}