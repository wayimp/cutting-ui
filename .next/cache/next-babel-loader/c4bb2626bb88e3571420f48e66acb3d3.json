{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/keith/cutting-ui/pages/report/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport axiosClient from '../../src/axiosClient';\nimport { useSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\nimport { flatten } from 'lodash';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Link from '../../src/Link';\nimport TopBar from '../../components/TopBar';\nimport numeral from 'numeral';\nvar priceFormat = '$0.00';\nimport moment from 'moment-timezone';\nvar dateFormat = 'YYYY-MM-DDTHH:mm:SS';\nvar dateDisplay = 'dddd MMM DD hh:mm a';\nimport { Container, Grid, Checkbox, Typography, TextField, List, ListItem, ListItemAvatar, ListItemText, Table, TableBody, TableCell, TableRow, Button } from '@material-ui/core';\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\n\nimport { getLangString } from '../../components/Lang';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nvar useStyles = makeStyles(function (theme) {\n  var _ref;\n\n  return _ref = {\n    toolbar: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1)\n    }, theme.mixins.toolbar),\n    formGroup: {\n      margin: 20,\n      padding: 20,\n      backgroundColor: '#fafafa',\n      border: '1px solid #ccc'\n    },\n    formGroupTop: {\n      margin: 20,\n      padding: 20\n    },\n    center: {\n      textAlign: 'center'\n    },\n    content: {\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      flexGrow: 1,\n      paddingRight: theme.spacing(5)\n    },\n    root: {\n      padding: 0,\n      flexGrow: 1\n    }\n  }, _defineProperty(_ref, \"center\", {\n    textAlign: 'center',\n    flexGrow: 1\n  }), _defineProperty(_ref, \"lines\", {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  }), _defineProperty(_ref, \"nolines\", {\n    reportBottom: '2px solid white'\n  }), _defineProperty(_ref, \"flexGrid\", {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  }), _defineProperty(_ref, \"modal\", {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }), _defineProperty(_ref, \"button\", {\n    margin: theme.spacing(1)\n  }), _ref;\n});\n\nvar Report = function Report(_ref2) {\n  _s();\n\n  var propsReport = _ref2.propsReport,\n      dispatch = _ref2.dispatch,\n      lang = _ref2.lang;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(propsReport),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      report = _React$useState2[0],\n      setReport = _React$useState2[1];\n\n  var langSuffix = lang ? lang.substring(0, 2) : 'en';\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _React$useState3 = React.useState(new Date('2014-08-18T21:11:54')),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedDate = _React$useState4[0],\n      setSelectedDate = _React$useState4[1];\n\n  var handleDateChange = function handleDateChange(date) {\n    setSelectedDate(date);\n  };\n\n  useEffect(function () {\n    document.title = report.customerName;\n  });\n\n  var changeValue = function changeValue(name, value) {\n    var updated = _objectSpread(_objectSpread({}, report), {}, _defineProperty({}, name, value));\n\n    setReport(updated);\n  };\n\n  var changeField = function changeField(event) {\n    changeValue(event.target.name, event.target.value);\n  };\n\n  var changeCheckbox = function changeCheckbox(event) {\n    changeValue(event.target.name, event.target.checked);\n  };\n\n  var updateReport = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_updateReport) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axiosClient.patch('/reports', _updateReport).then(function (res) {\n                enqueueSnackbar(getLangString('report.updated', lang), {\n                  variant: 'success'\n                });\n                setReport(_updateReport);\n              })[\"catch\"](function (err) {\n                enqueueSnackbar(getLangString('report.updateError', lang), {\n                  variant: 'error'\n                });\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateReport(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Container, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, __jsx(TopBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    spacing: 2,\n    alignItems: \"flex-end\",\n    justify: \"space-between\",\n    className: classes.formGroupTop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"job\",\n    label: \"Job#\",\n    defaultValue: report.job ? report.job : '',\n    onChange: changeField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, __jsx(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    id: \"date\",\n    label: \"Date\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"po\",\n    label: \"PO#\",\n    defaultValue: report.po ? report.po : '',\n    onChange: changeField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerName\",\n    label: \"Customer Name\",\n    defaultValue: report.customerName ? report.customerName : '',\n    onChange: changeField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerStreet\",\n    label: \"Street Address\",\n    defaultValue: report.customerStreet ? report.customerStreet : '',\n    onChange: changeField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"customerCity\",\n    label: \"City\",\n    defaultValue: report.customerCity ? report.customerCity : '',\n    onChange: function onChange(event) {\n      return changeField('customerCity', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"customerState\",\n    label: \"State\",\n    defaultValue: report.customerState ? report.customerState : '',\n    onChange: function onChange(event) {\n      return changeField('customerState', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"customerZip\",\n    label: \"Zip\",\n    defaultValue: report.customerZip ? report.customerZip : '',\n    onChange: function onChange(event) {\n      return changeField('customerZip', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"customerPhone\",\n    defaultValue: report.customerPhone ? report.customerPhone : '',\n    onChange: function onChange(event) {\n      return changeField('customerPhone', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"machineType\",\n    label: \"Machine Type\",\n    defaultValue: report.machineType ? report.machineType : '',\n    onChange: function onChange(event) {\n      return changeField('machineType', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"machineSerial\",\n    label: \"Machine Serial\",\n    defaultValue: report.machineSerial ? report.machineSerial : '',\n    onChange: function onChange(event) {\n      return changeField('machineSerial', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"control\",\n    label: \"Control\",\n    defaultValue: report.control ? report.control : '',\n    onChange: function onChange(event) {\n      return changeField('control', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"controlSerial\",\n    label: \"Control Serial\",\n    defaultValue: report.controlSerial ? report.controlSerial : '',\n    onChange: function onChange(event) {\n      return changeField('controlSerial', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"plasmaType\",\n    label: \"Plasma Type\",\n    defaultValue: report.plasmaType ? report.plasmaType : '',\n    onChange: function onChange(event) {\n      return changeField('plasmaType', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"plasmaModel\",\n    label: \"Plasma Model\",\n    defaultValue: report.plasmaModel ? report.plasmaModel : '',\n    onChange: function onChange(event) {\n      return changeField('plasmaModel', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"plasmaSerial\",\n    label: \"Plasma Serial\",\n    defaultValue: report.plasmaSerial ? report.plasmaSerial : '',\n    onChange: function onChange(event) {\n      return changeField('plasmaSerial', event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: oxyFuel,\n      onChange: changeCheckbox,\n      name: \"oxyFuel\",\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }\n    }),\n    label: \"Oxy Fuel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(Report, \"xny9wHzGmBcz9RW9wY0GyQblUQE=\", false, function () {\n  return [useStyles, useTheme, useSnackbar];\n});\n\n_c = Report;\nexport var __N_SSP = true;\nexport default connect(function (state) {\n  return state;\n})(Report);\n\nvar _c;\n\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"sources":["/Users/keith/cutting-ui/pages/report/[id].js"],"names":["React","useState","useEffect","axiosClient","useSnackbar","connect","flatten","fade","makeStyles","useTheme","Link","TopBar","numeral","priceFormat","moment","dateFormat","dateDisplay","Container","Grid","Checkbox","Typography","TextField","List","ListItem","ListItemAvatar","ListItemText","Table","TableBody","TableCell","TableRow","Button","getLangString","CancelIcon","CheckCircleIcon","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","useStyles","theme","toolbar","display","alignItems","justifyContent","padding","spacing","mixins","formGroup","margin","backgroundColor","border","formGroupTop","center","textAlign","content","flexGrow","paddingRight","root","borderTop","borderLeft","borderRight","reportBottom","Report","propsReport","dispatch","lang","classes","report","setReport","langSuffix","substring","enqueueSnackbar","Date","selectedDate","setSelectedDate","handleDateChange","date","document","title","customerName","changeValue","name","value","updated","changeField","event","target","changeCheckbox","checked","updateReport","patch","then","res","variant","err","textField","job","po","customerStreet","customerCity","customerState","customerZip","customerPhone","machineType","machineSerial","control","controlSerial","plasmaType","plasmaModel","plasmaSerial","oxyFuel","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axiosClient from '../../src/axiosClient'\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux'\nimport { flatten } from 'lodash'\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles'\nimport Link from '../../src/Link'\nimport TopBar from '../../components/TopBar'\nimport numeral from 'numeral'\nconst priceFormat = '$0.00'\nimport moment from 'moment-timezone'\nconst dateFormat = 'YYYY-MM-DDTHH:mm:SS'\nconst dateDisplay = 'dddd MMM DD hh:mm a'\nimport {\n  Container,\n  Grid,\n  Checkbox,\n  Typography,\n  TextField,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Button\n} from '@material-ui/core'\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\nimport { getLangString } from '../../components/Lang'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  formGroup: {\n    margin: 20,\n    padding: 20,\n    backgroundColor: '#fafafa',\n    border: '1px solid #ccc'\n  },\n  formGroupTop: {\n    margin: 20,\n    padding: 20\n  },\n  center: {\n    textAlign: 'center'\n  },\n  content: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    paddingRight: theme.spacing(5)\n  },\n  root: {\n    padding: 0,\n    flexGrow: 1\n  },\n  center: {\n    textAlign: 'center',\n    flexGrow: 1\n  },\n  lines: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  },\n  nolines: {\n    reportBottom: '2px solid white'\n  },\n  flexGrid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}))\n\nconst Report = ({ propsReport, dispatch, lang }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [report, setReport] = React.useState(propsReport)\n  const langSuffix = lang ? lang.substring(0, 2) : 'en'\n  const { enqueueSnackbar } = useSnackbar()\n\n  const [selectedDate, setSelectedDate] = React.useState(\n    new Date('2014-08-18T21:11:54')\n  )\n\n  const handleDateChange = date => {\n    setSelectedDate(date)\n  }\n\n  useEffect(() => {\n    document.title = report.customerName\n  })\n\n  const changeValue = (name, value) => {\n    const updated = {\n      ...report,\n      [name]: value\n    }\n    setReport(updated)\n  }\n  \n  const changeField = event => {\n    changeValue(event.target.name, event.target.value)\n  }\n\n  const changeCheckbox = event => {\n    changeValue(event.target.name, event.target.checked)\n  }\n\n  const updateReport = async updateReport => {\n    await axiosClient\n      .patch('/reports', updateReport)\n      .then(res => {\n        enqueueSnackbar(getLangString('report.updated', lang), {\n          variant: 'success'\n        })\n        setReport(updateReport)\n      })\n      .catch(err => {\n        enqueueSnackbar(getLangString('report.updateError', lang), {\n          variant: 'error'\n        })\n      })\n  }\n\n  return (\n    <Container className={classes.root}>\n      <TopBar />\n      <div className={classes.content}>\n        <Grid\n          item\n          container\n          xs={12}\n          spacing={2}\n          alignItems='flex-end'\n          justify='space-between'\n          className={classes.formGroupTop}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              name='job'\n              label='Job#'\n              defaultValue={report.job ? report.job : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant='inline'\n                format='MM/dd/yyyy'\n                id='date'\n                label='Date'\n                value={selectedDate}\n                onChange={handleDateChange}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              name='po'\n              label='PO#'\n              defaultValue={report.po ? report.po : ''}\n              onChange={changeField}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          container\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerName'\n              label='Customer Name'\n              defaultValue={report.customerName ? report.customerName : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerStreet'\n              label='Street Address'\n              defaultValue={report.customerStreet ? report.customerStreet : ''}\n              onChange={changeField }\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='customerCity'\n              label='City'\n              defaultValue={report.customerCity ? report.customerCity : ''}\n              onChange={event =>\n                changeField('customerCity', event.target.value)\n              }\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='customerState'\n              label='State'\n              defaultValue={report.customerState ? report.customerState : ''}\n              onChange={event =>\n                changeField('customerState', event.target.value)\n              }\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='customerZip'\n              label='Zip'\n              defaultValue={report.customerZip ? report.customerZip : ''}\n              onChange={event => changeField('customerZip', event.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='customerPhone'\n              defaultValue={report.customerPhone ? report.customerPhone : ''}\n              onChange={event => changeField('customerPhone', event.target.value)}\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='machineType'\n              label='Machine Type'\n              defaultValue={report.machineType ? report.machineType : ''}\n              onChange={event => changeField('machineType', event.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='machineSerial'\n              label='Machine Serial'\n              defaultValue={report.machineSerial ? report.machineSerial : ''}\n              onChange={event => changeField('machineSerial', event.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='control'\n              label='Control'\n               defaultValue={report.control? report.control : ''}\n              onChange={event => changeField('control', event.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='controlSerial'\n              label='Control Serial'\n              defaultValue={report.controlSerial? report.controlSerial : ''}\n              onChange={event => changeField('controlSerial', event.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='plasmaType'\n              label='Plasma Type'\n              defaultValue={report.plasmaType? report.plasmaType : ''}\n              onChange={event => changeField('plasmaType', event.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='plasmaModel'\n              label='Plasma Model'\n              defaultValue={report.plasmaModel? report.plasmaModel : ''}\n              onChange={event => changeField('plasmaModel', event.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='plasmaSerial'\n              label='Plasma Serial'\n              defaultValue={report.plasmaSerial? report.plasmaSerial : ''}\n              onChange={event => changeField('plasmaSerial', event.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={oxyFuel}\n                  onChange={changeCheckbox}\n                  name='oxyFuel'\n                  color='primary'\n                />\n              }\n              label='Oxy Fuel'\n            />\n          </Grid>\n        </Grid>\n        {/*\n\n  \"oxyFuel\": true,\n  \"torches\": 2,\n  \"drive\": \"\",\n  \"driveSerial\": \"\",\n\n        <Grid item container xs={12} spacing={2} justify='flex-end'>\n          <Grid item>\n            <Timeline>\n              {report.timeline.map((timestamp, index) => (\n                <TimelineItem key={index}>\n                  <TimelineSeparator>\n                    <TimelineDot />\n                    {index < report.timeline.length - 1 ? (\n                      <TimelineConnector />\n                    ) : (\n                      ''\n                    )}\n                  </TimelineSeparator>\n                  <TimelineContent>\n                    <Typography>\n                      {timestamp[`description_${langSuffix}`]}<p/>\n                      {moment(timestamp.timestamp, dateFormat)\n                        .locale(lang.substring(0, 2))\n                        .format(dateDisplay)}\n                    </Typography>\n                  </TimelineContent>\n                </TimelineItem>\n              ))}\n            </Timeline>\n          </Grid>\n          {report.timeline.length <= 1 ? (\n            <Grid item>\n              <Button\n                onClick={reportDelivered}\n                variant='contained'\n                color='primary'\n                className={classes.button}\n                startIcon={<CheckCircleIcon />}\n              >\n                {getLangString('report.delivered', lang)}\n              </Button>\n              <Button\n                onClick={reportCancelled}\n                variant='contained'\n                color='secondary'\n                className={classes.button}\n                startIcon={<CancelIcon />}\n              >\n                {getLangString('report.cancelled', lang)}\n              </Button>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </Grid>\n        */}\n      </div>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps (context) {\n  const { id } = context.params\n  const propsReport = await axiosClient\n    .get('/reports/' + id)\n    .then(response => response.data)\n\n  return {\n    props: {\n      propsReport\n    }\n  }\n}\n\nexport default connect(state => state)(Report)\n"]},"metadata":{},"sourceType":"module"}