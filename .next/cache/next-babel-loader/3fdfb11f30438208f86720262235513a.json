{"ast":null,"code":"var _jsxFileName = \"/Users/keith/cutting-ui/pages/report/[id].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport axiosClient from '../../src/axiosClient';\nimport { useSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\nimport { flatten } from 'lodash';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Link from '../../src/Link';\nimport TopBar from '../../components/TopBar';\nimport numeral from 'numeral';\nconst priceFormat = '$0.00';\nimport moment from 'moment-timezone';\nconst dateFormat = 'YYYY-MM-DDTHH:mm:SS';\nconst dateDisplay = 'dddd MMM DD hh:mm a';\nimport { Box, Container, Grid, Checkbox, Typography, TextField, List, ListItem, ListItemAvatar, ListItemText, Table, TableBody, TableCell, TableRow, Button, FormControlLabel } from '@material-ui/core';\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\n\nimport { getLangString } from '../../components/Lang';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nconst useStyles = makeStyles(theme => ({\n  toolbar: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar),\n  formGroup: {\n    margin: 20,\n    padding: 20,\n    backgroundColor: '#fafafa',\n    border: '1px solid #ccc'\n  },\n  formGroupTop: {\n    margin: 20,\n    padding: 20\n  },\n  center: {\n    textAlign: 'center'\n  },\n  content: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    paddingRight: theme.spacing(5)\n  },\n  root: {\n    padding: 0,\n    flexGrow: 1\n  },\n  center: {\n    textAlign: 'center',\n    flexGrow: 1\n  },\n  lines: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  },\n  nolines: {\n    reportBottom: '2px solid white'\n  },\n  flexGrid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: 0,\n    padding: 0\n  },\n  checkbox: {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: 16,\n    padding: 0\n  }\n}));\n\nconst Report = ({\n  propsReport,\n  dispatch,\n  lang\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [report, setReport] = React.useState(propsReport);\n  const langSuffix = lang ? lang.substring(0, 2) : 'en';\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  useEffect(() => {\n    document.title = report.customerName;\n  });\n\n  const changeValue = (name, value) => {\n    const updated = _objectSpread(_objectSpread({}, report), {}, {\n      [name]: value\n    });\n\n    setReport(updated); //updateReport(updated)\n  };\n\n  const changeField = event => {\n    changeValue(event.target.name, event.target.value);\n  };\n\n  const changeCheckbox = event => {\n    changeValue(event.target.name, event.target.checked);\n  };\n\n  const updateReport = async updateReport => {\n    await axiosClient.patch('/reports', updateReport).then(res => {\n      enqueueSnackbar('Report Updated', {\n        variant: 'success'\n      });\n      setReport(updateReport);\n    }).catch(err => {\n      enqueueSnackbar('Update Error', {\n        variant: 'error'\n      });\n    });\n  };\n\n  return __jsx(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, __jsx(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    alignItems: \"flex-end\",\n    justify: \"space-between\",\n    className: classes.formGroupTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"job\",\n    label: \"Job#\",\n    defaultValue: report.job ? report.job : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, __jsx(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    id: \"date\",\n    label: \"Date\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    name: \"po\",\n    label: \"PO#\",\n    defaultValue: report.po ? report.po : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerName\",\n    label: \"Customer Name\",\n    defaultValue: report.customerName ? report.customerName : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerStreet\",\n    label: \"Street Address\",\n    defaultValue: report.customerStreet ? report.customerStreet : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerCity\",\n    label: \"City\",\n    defaultValue: report.customerCity ? report.customerCity : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerState\",\n    label: \"State\",\n    defaultValue: report.customerState ? report.customerState : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerZip\",\n    label: \"Zip\",\n    defaultValue: report.customerZip ? report.customerZip : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"customerPhone\",\n    label: \"Phone\",\n    defaultValue: report.customerPhone ? report.customerPhone : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    spacing: 2,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"machineType\",\n    label: \"Machine Type\",\n    defaultValue: report.machineType ? report.machineType : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }), __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"machineSerial\",\n    label: \"Machine Serial\",\n    defaultValue: report.machineSerial ? report.machineSerial : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"control\",\n    label: \"Control\",\n    defaultValue: report.control ? report.control : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"controlSerial\",\n    label: \"Control Serial\",\n    defaultValue: report.controlSerial ? report.controlSerial : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaType\",\n    label: \"Plasma Type\",\n    defaultValue: report.plasmaType ? report.plasmaType : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaModel\",\n    label: \"Plasma Model\",\n    defaultValue: report.plasmaModel ? report.plasmaModel : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"plasmaSerial\",\n    label: \"Plasma Serial\",\n    defaultValue: report.plasmaSerial ? report.plasmaSerial : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      className: classes.checkbox,\n      checked: report.oxyFuel,\n      onChange: changeCheckbox,\n      name: \"oxyFuel\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }),\n    label: \"Oxy Fuel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    name: \"torches\",\n    label: \"Torches\",\n    type: \"number\",\n    defaultValue: report.torches ? report.torches : '',\n    onChange: changeField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    id\n  } = context.params;\n  const propsReport = await axiosClient.get('/reports/' + id).then(response => response.data);\n  return {\n    props: {\n      propsReport\n    }\n  };\n}\nexport default connect(state => state)(Report);","map":{"version":3,"sources":["/Users/keith/cutting-ui/pages/report/[id].js"],"names":["React","useState","useEffect","axiosClient","useSnackbar","connect","flatten","fade","makeStyles","useTheme","Link","TopBar","numeral","priceFormat","moment","dateFormat","dateDisplay","Box","Container","Grid","Checkbox","Typography","TextField","List","ListItem","ListItemAvatar","ListItemText","Table","TableBody","TableCell","TableRow","Button","FormControlLabel","getLangString","CancelIcon","CheckCircleIcon","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","useStyles","theme","toolbar","display","alignItems","justifyContent","padding","spacing","mixins","formGroup","margin","backgroundColor","border","formGroupTop","center","textAlign","content","flexGrow","paddingRight","root","lines","borderTop","borderLeft","borderRight","reportBottom","nolines","flexGrid","modal","button","textField","checkbox","marginTop","marginBottom","marginLeft","Report","propsReport","dispatch","lang","classes","report","setReport","langSuffix","substring","enqueueSnackbar","selectedDate","setSelectedDate","Date","handleDateChange","date","document","title","customerName","changeValue","name","value","updated","changeField","event","target","changeCheckbox","checked","updateReport","patch","then","res","variant","catch","err","job","po","customerStreet","customerCity","customerState","customerZip","customerPhone","machineType","machineSerial","control","controlSerial","plasmaType","plasmaModel","plasmaSerial","oxyFuel","torches","getServerSideProps","context","id","params","get","response","data","props","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axiosClient from '../../src/axiosClient'\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux'\nimport { flatten } from 'lodash'\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles'\nimport Link from '../../src/Link'\nimport TopBar from '../../components/TopBar'\nimport numeral from 'numeral'\nconst priceFormat = '$0.00'\nimport moment from 'moment-timezone'\nconst dateFormat = 'YYYY-MM-DDTHH:mm:SS'\nconst dateDisplay = 'dddd MMM DD hh:mm a'\nimport {\n  Box,\n  Container,\n  Grid,\n  Checkbox,\n  Typography,\n  TextField,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Button,\n  FormControlLabel\n} from '@material-ui/core'\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\nimport { getLangString } from '../../components/Lang'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker\n} from '@material-ui/pickers'\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  formGroup: {\n    margin: 20,\n    padding: 20,\n    backgroundColor: '#fafafa',\n    border: '1px solid #ccc'\n  },\n  formGroupTop: {\n    margin: 20,\n    padding: 20\n  },\n  center: {\n    textAlign: 'center'\n  },\n  content: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    paddingRight: theme.spacing(5)\n  },\n  root: {\n    padding: 0,\n    flexGrow: 1\n  },\n  center: {\n    textAlign: 'center',\n    flexGrow: 1\n  },\n  lines: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  },\n  nolines: {\n    reportBottom: '2px solid white'\n  },\n  flexGrid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    margin: 0,\n    padding: 0\n  },\n  checkbox: {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: 16,\n    padding: 0\n  }\n}))\n\nconst Report = ({ propsReport, dispatch, lang }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [report, setReport] = React.useState(propsReport)\n  const langSuffix = lang ? lang.substring(0, 2) : 'en'\n  const { enqueueSnackbar } = useSnackbar()\n\n  const [selectedDate, setSelectedDate] = React.useState(\n    new Date('2014-08-18T21:11:54')\n  )\n\n  const handleDateChange = date => {\n    setSelectedDate(date)\n  }\n\n  useEffect(() => {\n    document.title = report.customerName\n  })\n\n  const changeValue = (name, value) => {\n    const updated = {\n      ...report,\n      [name]: value\n    }\n    setReport(updated)\n    //updateReport(updated)\n  }\n\n  const changeField = event => {\n    changeValue(event.target.name, event.target.value)\n  }\n\n  const changeCheckbox = event => {\n    changeValue(event.target.name, event.target.checked)\n  }\n\n  const updateReport = async updateReport => {\n    await axiosClient\n      .patch('/reports', updateReport)\n      .then(res => {\n        enqueueSnackbar('Report Updated', {\n          variant: 'success'\n        })\n        setReport(updateReport)\n      })\n      .catch(err => {\n        enqueueSnackbar('Update Error', {\n          variant: 'error'\n        })\n      })\n  }\n\n  return (\n    <Container className={classes.root}>\n      <TopBar />\n      <div className={classes.content}>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          alignItems='flex-end'\n          justify='space-between'\n          className={classes.formGroupTop}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              name='job'\n              label='Job#'\n              defaultValue={report.job ? report.job : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant='inline'\n                format='MM/dd/yyyy'\n                id='date'\n                label='Date'\n                value={selectedDate}\n                onChange={handleDateChange}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              name='po'\n              label='PO#'\n              defaultValue={report.po ? report.po : ''}\n              onChange={changeField}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerName'\n              label='Customer Name'\n              defaultValue={report.customerName ? report.customerName : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerStreet'\n              label='Street Address'\n              defaultValue={report.customerStreet ? report.customerStreet : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerCity'\n              label='City'\n              defaultValue={report.customerCity ? report.customerCity : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerState'\n              label='State'\n              defaultValue={report.customerState ? report.customerState : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerZip'\n              label='Zip'\n              defaultValue={report.customerZip ? report.customerZip : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='customerPhone'\n              label='Phone'\n              defaultValue={report.customerPhone ? report.customerPhone : ''}\n              onChange={changeField}\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction='row'\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n            <Grid item           spacing={2}\n          justify='space-between' >\n              <TextField\n                className={classes.textField}\n                variant='outlined'\n                name='machineType'\n                label='Machine Type'\n                defaultValue={report.machineType ? report.machineType : ''}\n                onChange={changeField}\n              />\n              <TextField\n                className={classes.textField}\n                variant='outlined'\n                name='machineSerial'\n                label='Machine Serial'\n                defaultValue={report.machineSerial ? report.machineSerial : ''}\n                onChange={changeField}\n              />\n            </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='control'\n              label='Control'\n              defaultValue={report.control ? report.control : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='controlSerial'\n              label='Control Serial'\n              defaultValue={report.controlSerial ? report.controlSerial : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaType'\n              label='Plasma Type'\n              defaultValue={report.plasmaType ? report.plasmaType : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaModel'\n              label='Plasma Model'\n              defaultValue={report.plasmaModel ? report.plasmaModel : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='plasmaSerial'\n              label='Plasma Serial'\n              defaultValue={report.plasmaSerial ? report.plasmaSerial : ''}\n              onChange={changeField}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  className={classes.checkbox}\n                  checked={report.oxyFuel}\n                  onChange={changeCheckbox}\n                  name='oxyFuel'\n                  color='primary'\n                />\n              }\n              label='Oxy Fuel'\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              name='torches'\n              label='Torches'\n              type='number'\n              defaultValue={report.torches ? report.torches : ''}\n              onChange={changeField}\n            />\n          </Grid>\n        </Grid>\n        {/*\n\n  \"oxyFuel\": true,\n  \"torches\": 2,\n  \"drive\": \"\",\n  \"driveSerial\": \"\",\n\n        <Grid item container xs={12} spacing={2} justify='flex-end'>\n          <Grid item>\n            <Timeline>\n              {report.timeline.map((timestamp, index) => (\n                <TimelineItem key={index}>\n                  <TimelineSeparator>\n                    <TimelineDot />\n                    {index < report.timeline.length - 1 ? (\n                      <TimelineConnector />\n                    ) : (\n                      ''\n                    )}\n                  </TimelineSeparator>\n                  <TimelineContent>\n                    <Typography>\n                      {timestamp[`description_${langSuffix}`]}<p/>\n                      {moment(timestamp.timestamp, dateFormat)\n                        .locale(lang.substring(0, 2))\n                        .format(dateDisplay)}\n                    </Typography>\n                  </TimelineContent>\n                </TimelineItem>\n              ))}\n            </Timeline>\n          </Grid>\n          {report.timeline.length <= 1 ? (\n            <Grid item>\n              <Button\n                onClick={reportDelivered}\n                variant='contained'\n                color='primary'\n                className={classes.button}\n                startIcon={<CheckCircleIcon />}\n              >\n                {getLangString('report.delivered', lang)}\n              </Button>\n              <Button\n                onClick={reportCancelled}\n                variant='contained'\n                color='secondary'\n                className={classes.button}\n                startIcon={<CancelIcon />}\n              >\n                {getLangString('report.cancelled', lang)}\n              </Button>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </Grid>\n        */}\n      </div>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps (context) {\n  const { id } = context.params\n  const propsReport = await axiosClient\n    .get('/reports/' + id)\n    .then(response => response.data)\n\n  return {\n    props: {\n      propsReport\n    }\n  }\n}\n\nexport default connect(state => state)(Report)\n"]},"metadata":{},"sourceType":"module"}