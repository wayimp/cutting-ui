{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/keith/cutting-ui/pages/report/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport axiosClient from '../../src/axiosClient';\nimport { useSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\nimport { flatten } from 'lodash';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Link from '../../src/Link';\nimport TopBar from '../../components/TopBar';\nimport numeral from 'numeral';\nvar priceFormat = '$0.00';\nimport moment from 'moment-timezone';\nvar dateFormat = 'YYYY-MM-DDTHH:mm:SS';\nvar dateDisplay = 'dddd MMM DD hh:mm a';\nimport { Container, Grid, Checkbox, Typography, TextField, List, ListItem, ListItemAvatar, ListItemText, Table, TableBody, TableCell, TableRow, Button } from '@material-ui/core';\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\n\nimport { getLangString } from '../../components/Lang';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nvar useStyles = makeStyles(function (theme) {\n  var _ref;\n\n  return _ref = {\n    toolbar: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1)\n    }, theme.mixins.toolbar),\n    formGroup: {\n      margin: 20,\n      padding: 20,\n      backgroundColor: '#fafafa',\n      border: '1px solid #ccc'\n    },\n    center: {\n      textAlign: 'center'\n    },\n    content: {\n      textAlign: 'center',\n      flexGrow: 1,\n      padding: theme.spacing(7)\n    },\n    root: {\n      flexGrow: 1\n    }\n  }, _defineProperty(_ref, \"center\", {\n    textAlign: 'center',\n    flexGrow: 1\n  }), _defineProperty(_ref, \"lines\", {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  }), _defineProperty(_ref, \"nolines\", {\n    reportBottom: '2px solid white'\n  }), _defineProperty(_ref, \"flexGrid\", {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  }), _defineProperty(_ref, \"modal\", {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }), _defineProperty(_ref, \"button\", {\n    margin: theme.spacing(1)\n  }), _ref;\n});\n\nvar Report = function Report(_ref2) {\n  _s();\n\n  var propsReport = _ref2.propsReport,\n      dispatch = _ref2.dispatch,\n      lang = _ref2.lang;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(propsReport),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      report = _React$useState2[0],\n      setReport = _React$useState2[1];\n\n  var langSuffix = lang ? lang.substring(0, 2) : 'en';\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _React$useState3 = React.useState(new Date('2014-08-18T21:11:54')),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedDate = _React$useState4[0],\n      setSelectedDate = _React$useState4[1];\n\n  var handleDateChange = function handleDateChange(date) {\n    setSelectedDate(date);\n  };\n\n  useEffect(function () {\n    document.title = report.customerName;\n  });\n\n  var updateReport = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_updateReport) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axiosClient.patch('/reports', _updateReport).then(function (res) {\n                enqueueSnackbar(getLangString('report.updated', lang), {\n                  variant: 'success'\n                });\n                setReport(_updateReport);\n              })[\"catch\"](function (err) {\n                enqueueSnackbar(getLangString('report.updateError', lang), {\n                  variant: 'error'\n                });\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateReport(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, __jsx(TopBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: classes.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.toolbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"job\",\n    label: \"Job#\",\n    value: report && report.job ? report.job : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, __jsx(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, __jsx(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"outlined\",\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date\",\n    label: \"Date\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"po\",\n    label: \"PO#\",\n    value: report && report.po ? report.po : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    spacing: 2,\n    justify: \"space-between\",\n    className: classes.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"customerName\",\n    label: \"Customer Name\",\n    value: report && report.customerName ? report.customerName : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"customerStreet\",\n    label: \"Street Address\",\n    value: report && report.customerStreet ? report.customerStreet : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"customerCity\",\n    label: \"City\",\n    value: report && report.customerCity ? report.customerCity : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"customerState\",\n    label: \"State\",\n    value: report && report.customerState ? report.customerState : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"customerZip\",\n    label: \"Zip\",\n    value: report && report.customerZip ? report.customerZip : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    variant: \"outlined\",\n    id: \"customerPhone\",\n    label: \"Phone\",\n    value: report && report.customerPhone ? report.customerPhone : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(Report, \"xny9wHzGmBcz9RW9wY0GyQblUQE=\", false, function () {\n  return [useStyles, useTheme, useSnackbar];\n});\n\n_c = Report;\nexport var __N_SSP = true;\nexport default connect(function (state) {\n  return state;\n})(Report);\n\nvar _c;\n\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"sources":["/Users/keith/cutting-ui/pages/report/[id].js"],"names":["React","useState","useEffect","axiosClient","useSnackbar","connect","flatten","fade","makeStyles","useTheme","Link","TopBar","numeral","priceFormat","moment","dateFormat","dateDisplay","Container","Grid","Checkbox","Typography","TextField","List","ListItem","ListItemAvatar","ListItemText","Table","TableBody","TableCell","TableRow","Button","getLangString","CancelIcon","CheckCircleIcon","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","useStyles","theme","toolbar","display","alignItems","justifyContent","padding","spacing","mixins","formGroup","margin","backgroundColor","border","center","textAlign","content","flexGrow","root","borderTop","borderLeft","borderRight","reportBottom","Report","propsReport","dispatch","lang","classes","report","setReport","langSuffix","substring","enqueueSnackbar","Date","selectedDate","setSelectedDate","handleDateChange","date","document","title","customerName","updateReport","patch","then","res","variant","err","textField","job","po","customerStreet","customerCity","customerState","customerZip","customerPhone","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axiosClient from '../../src/axiosClient'\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux'\nimport { flatten } from 'lodash'\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles'\nimport Link from '../../src/Link'\nimport TopBar from '../../components/TopBar'\nimport numeral from 'numeral'\nconst priceFormat = '$0.00'\nimport moment from 'moment-timezone'\nconst dateFormat = 'YYYY-MM-DDTHH:mm:SS'\nconst dateDisplay = 'dddd MMM DD hh:mm a'\nimport {\n  Container,\n  Grid,\n  Checkbox,\n  Typography,\n  TextField,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Button\n} from '@material-ui/core'\n/*\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineOppositeContent\n} from '@material-ui/lab'\n*/\nimport { getLangString } from '../../components/Lang'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  formGroup: {\n    margin: 20,\n    padding: 20,\n    backgroundColor: '#fafafa',\n    border: '1px solid #ccc'\n  },\n  center: {\n    textAlign: 'center'\n  },\n  content: {\n    textAlign: 'center',\n    flexGrow: 1,\n    padding: theme.spacing(7)\n  },\n  root: {\n    flexGrow: 1\n  },\n  center: {\n    textAlign: 'center',\n    flexGrow: 1\n  },\n  lines: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    borderTop: '1px solid #ccc',\n    borderLeft: '1px solid #ccc',\n    borderRight: '1px solid #ccc',\n    '&:last-child': {\n      reportBottom: '1px solid #ccc'\n    }\n  },\n  nolines: {\n    reportBottom: '2px solid white'\n  },\n  flexGrid: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}))\n\nconst Report = ({ propsReport, dispatch, lang }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [report, setReport] = React.useState(propsReport)\n  const langSuffix = lang ? lang.substring(0, 2) : 'en'\n  const { enqueueSnackbar } = useSnackbar()\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'))\n\n  const handleDateChange = date => {\n    setSelectedDate(date)\n  }\n\n  useEffect(() => {\n    document.title = report.customerName\n  })\n\n  const updateReport = async updateReport => {\n    await axiosClient\n      .patch('/reports', updateReport)\n      .then(res => {\n        enqueueSnackbar(getLangString('report.updated', lang), {\n          variant: 'success'\n        })\n        setReport(updateReport)\n      })\n      .catch(err => {\n        enqueueSnackbar(getLangString('report.updateError', lang), {\n          variant: 'error'\n        })\n      })\n  }\n\n  return (\n    <Container>\n      <TopBar />\n      <div className={classes.content}>\n        <div className={classes.toolbar} />\n\n        <Grid\n          item\n          container\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='job'\n              label='Job#'\n              value={report && report.job ? report.job : ''}\n            />\n          </Grid>\n          <Grid item>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant='outlined'\n                format='MM/dd/yyyy'\n                margin='normal'\n                id='date'\n                label='Date'\n                value={selectedDate}\n                onChange={handleDateChange}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='po'\n              label='PO#'\n              value={report && report.po ? report.po : ''}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          container\n          xs={12}\n          spacing={2}\n          justify='space-between'\n          className={classes.formGroup}\n        >\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='customerName'\n              label='Customer Name'\n              value={report && report.customerName ? report.customerName : ''}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='customerStreet'\n              label='Street Address'\n              value={\n                report && report.customerStreet ? report.customerStreet : ''\n              }\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='customerCity'\n              label='City'\n              value={report && report.customerCity ? report.customerCity : ''}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='customerState'\n              label='State'\n              value={report && report.customerState ? report.customerState : ''}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='customerZip'\n              label='Zip'\n              value={report && report.customerZip ? report.customerZip : ''}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              variant='outlined'\n              id='customerPhone'\n              label='Phone'\n              value={report && report.customerPhone ? report.customerPhone : ''}\n            />\n          </Grid>\n        </Grid>\n\n        {/*\n        <Grid item container xs={12} spacing={2} justify='flex-end'>\n          <Grid item>\n            <Timeline>\n              {report.timeline.map((timestamp, index) => (\n                <TimelineItem key={index}>\n                  <TimelineSeparator>\n                    <TimelineDot />\n                    {index < report.timeline.length - 1 ? (\n                      <TimelineConnector />\n                    ) : (\n                      ''\n                    )}\n                  </TimelineSeparator>\n                  <TimelineContent>\n                    <Typography>\n                      {timestamp[`description_${langSuffix}`]}<p/>\n                      {moment(timestamp.timestamp, dateFormat)\n                        .locale(lang.substring(0, 2))\n                        .format(dateDisplay)}\n                    </Typography>\n                  </TimelineContent>\n                </TimelineItem>\n              ))}\n            </Timeline>\n          </Grid>\n          {report.timeline.length <= 1 ? (\n            <Grid item>\n              <Button\n                onClick={reportDelivered}\n                variant='contained'\n                color='primary'\n                className={classes.button}\n                startIcon={<CheckCircleIcon />}\n              >\n                {getLangString('report.delivered', lang)}\n              </Button>\n              <Button\n                onClick={reportCancelled}\n                variant='contained'\n                color='secondary'\n                className={classes.button}\n                startIcon={<CancelIcon />}\n              >\n                {getLangString('report.cancelled', lang)}\n              </Button>\n            </Grid>\n          ) : (\n            ''\n          )}\n        </Grid>\n        */}\n      </div>\n    </Container>\n  )\n}\n\nexport async function getServerSideProps (context) {\n  const { id } = context.params\n  const propsReport = await axiosClient\n    .get('/reports/' + id)\n    .then(response => response.data)\n\n  return {\n    props: {\n      propsReport\n    }\n  }\n}\n\nexport default connect(state => state)(Report)\n"]},"metadata":{},"sourceType":"module"}